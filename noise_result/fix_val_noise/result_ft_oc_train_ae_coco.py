import math

import matplotlib.pyplot as plt
from matplotlib import cm
import numpy as np
from optimization.interpolation import upsampl_acc_res_numsym_4D

acc = {}
acc_k = {}
acc_k1 = {}
snr = [18, 12, 6, 0, -6, -12, -18]

# ################################################################### noise one side #######################################################################################
# ################################################################ 256 256

acc['symb256_256_imgret_r1_both'] = np.array([63.86] * 7)
acc['symb256_256_imgret_r5_both'] = np.array([89.86] * 7)
acc['symb256_256_imgret_r10_both'] = np.array([95.90] * 7)
acc['symb256_256_capret_r1_both'] = np.array([75.60] * 7)
acc['symb256_256_capret_r5_both'] = np.array([93.70] * 7)
acc['symb256_256_capret_r10_both'] = np.array([97.70] * 7)

acc['symb256_256_imgret_r1_nimg'] = np.array([63.54, 63.00, 59.42, 48.03, 25.03, 6.39, 1.32])
acc['symb256_256_imgret_r5_nimg'] = np.array([89.77, 89.74, 88.04, 82.30, 59.74, 23.20, 5.74])
acc['symb256_256_imgret_r10_nimg'] = np.array([95.72, 95.47, 94.79, 91.69, 76.48, 36.74, 10.09])
acc['symb256_256_capret_r1_nimg'] = np.array([75.50, 75.42, 73.22, 66.58, 41.42, 9.32, 1.36])
acc['symb256_256_capret_r5_nimg'] = np.array([94.22, 94.32, 93.08, 90.16, 72.12, 27.00, 4.96])
acc['symb256_256_capret_r10_nimg'] = np.array([97.14, 97.48, 96.78, 95.42, 84.08, 39.08, 8.40])

acc['symb256_256_imgret_r1_ncap'] = np.array([63.80, 63.38, 60.88, 53.01, 33.52, 9.49, 1.56])
acc['symb256_256_imgret_r5_ncap'] = np.array([89.92, 89.86, 88.46, 84.12, 68.98, 30.06, 6.09])
acc['symb256_256_imgret_r10_ncap'] = np.array([95.66, 95.52, 94.89, 92.55, 82.60, 44.62, 10.64])
acc['symb256_256_capret_r1_ncap'] = np.array([74.92, 74.08, 66.86, 50.40, 26.68, 8.16, 1.46])
acc['symb256_256_capret_r5_ncap'] = np.array([94.24, 92.78, 88.10, 74.96, 45.84, 15.36, 2.76])
acc['symb256_256_capret_r10_ncap'] = np.array([97.20, 96.70, 93.86, 85.38, 59.68, 23.18, 4.70])

################################################################### 256 256 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb256_256_imgret_r1'] = [[63.44, 62.60, 60.73, 52.14, 34.07, 9.34, 1.18],  #18
                               [62.88, 62.18, 60.05, 50.72, 32.80, 9.30, 1.23],  #12
                               [58.90, 58.65, 55.82, 48.52, 29.98, 7.79, 1.00],  #6
                               [47.67, 47.01, 45.30, 37.10, 24.66, 7.63, 0.79],  #0
                               [24.52, 24.63, 23.69, 19.94, 12.72, 3.56, 0.88],  #-6
                               [6.65, 6.42, 6.54, 5.37, 3.01, 1.26, 0.27],  #-12
                               [1.21, 1.18, 1.14, 1.02, 1.02, 0.48, 0.34]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_256_imgret_r5'] = [[89.87, 89.50, 88.60, 83.82, 69.48, 30.22, 5.63],  #18
                               [89.27, 89.08, 87.99, 83.02, 67.73, 28.79, 5.26],  #12
                               [88.16, 87.56, 86.38, 81.28, 65.08, 26.10, 5.05],  #6
                               [81.82, 81.45, 80.04, 73.66, 58.28, 25.85, 4.10],  #0
                               [59.40, 59.21, 57.87, 51.94, 37.70, 12.70, 3.97],  #-6
                               [22.79, 22.74, 22.69, 19.29, 12.83, 4.84, 1.16],  #-12
                               [5.36, 5.33, 5.25, 5.14, 4.70, 2.49, 1.33]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_256_imgret_r10'] = [[95.72, 95.33, 94.94, 92.47, 82.90, 44.48, 10.40],  #18
                               [95.43, 95.32, 94.68, 92.08, 81.50, 43.01, 9.56],  #12
                               [94.88, 94.66, 94.01, 90.87, 79.78, 39.71, 9.23],  #6
                               [91.70, 91.38, 90.44, 86.47, 74.60, 39.91, 7.90],  #0
                               [76.44, 75.92, 74.66, 69.29, 54.36, 21.44, 7.33],  #-6
                               [36.00, 36.15, 35.31, 31.19, 22.06, 8.73, 2.40],  #-12
                               [9.72, 9.88, 9.43, 9.30, 8.33, 4.82, 2.48]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_256_capret_r1'] = [[75.24, 72.80, 66.98, 50.90, 26.38, 7.38, 1.48],  #18
                               [74.66, 73.02, 66.50, 49.78, 25.54, 7.56, 1.30],  #12
                               [73.28, 70.58, 63.66, 48.56, 24.98, 6.98, 1.28],  #6
                               [64.60, 62.12, 55.44, 41.36, 22.46, 7.12, 1.22],  #0
                               [40.00, 38.82, 33.70, 23.74, 13.78, 3.76, 0.84],  #-6
                               [10.04, 8.54, 8.52, 6.00, 3.26, 1.20, 0.48],  #-12
                               [1.06, 1.26, 1.08, 1.08, 0.88, 0.32, 0.28]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_256_capret_r5'] = [[93.90, 92.16, 88.06, 75.16, 46.06, 15.50, 2.88],  #18
                               [93.72, 92.40, 87.68, 73.86, 45.82, 15.34, 2.82],  #12
                               [92.40, 90.88, 86.12, 72.12, 44.78, 13.80, 2.44],  #6
                               [89.00, 86.26, 80.96, 65.40, 41.52, 14.80, 2.40],  #0
                               [70.46, 69.24, 61.58, 46.58, 27.72, 8.42, 2.16],  #-6
                               [25.44, 23.72, 21.36, 15.46, 6.78, 3.04, 1.34],  #-12
                               [4.12, 3.98, 2.98, 3.28, 2.38, 1.22, 0.96]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_256_capret_r10'] = [[97.08, 96.24, 93.70, 85.18, 59.86, 23.92, 4.84],  #18
                               [97.12, 96.24, 93.54, 84.12, 60.02, 23.26, 4.40],  #12
                               [96.44, 95.50, 93.18, 83.54, 58.78, 21.42, 4.26],  #6
                               [94.76, 92.96, 89.68, 78.52, 54.80, 22.22, 3.84],  #0
                               [82.36, 81.26, 75.20, 60.78, 38.52, 13.36, 3.86],  #-6
                               [36.98, 34.14, 32.56, 23.68, 10.92, 5.34, 2.32],  #-12
                               [6.78, 6.70, 5.16, 5.46, 4.10, 1.86, 1.44]]   #-18
################################################################### 256 128 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb256_128_imgret_r1'] = [[62.44, 61.38, 57.30, 44.26, 21.12, 3.42, 0.77],  #18
                               [62.18, 60.57, 56.17, 43.44, 19.67, 3.40, 0.44],  #12
                               [58.35, 57.26, 52.56, 40.57, 18.59, 2.76, 0.53],  #6
                               [46.69, 46.03, 42.41, 31.84, 15.11, 2.35, 0.43],  #0
                               [24.58, 23.23, 21.50, 17.70, 9.33, 1.98, 0.36],  #-6
                               [6.22, 6.08, 5.52, 4.45, 2.69, 0.78, 0.28],  #-12
                               [1.26, 1.09, 0.94, 0.76, 0.73, 0.30, 0.24]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_128_imgret_r5'] = [[89.38, 88.79, 86.46, 79.05, 52.44, 13.58, 2.87],  #18
                               [89.05, 88.68, 85.65, 77.99, 51.21, 12.68, 2.85],  #12
                               [87.42, 87.00, 84.28, 75.79, 48.20, 11.48, 3.00],  #6
                               [81.37, 80.76, 78.16, 68.99, 42.07, 10.29, 2.36],  #0
                               [58.20, 57.10, 55.21, 47.51, 28.82, 8.18, 1.99],  #-6
                               [22.39, 21.50, 19.98, 16.95, 10.36, 3.44, 1.60],  #-12
                               [5.22, 4.91, 4.85, 4.16, 3.20, 1.27, 1.01]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_128_imgret_r10'] = [[95.39, 95.12, 93.75, 89.58, 68.88, 22.64, 5.38],  #18
                               [95.14, 95.12, 93.57, 89.11, 67.88, 21.50, 5.15],  #12
                               [94.42, 94.14, 92.78, 87.63, 65.06, 19.98, 5.77],  #6
                               [91.35, 90.94, 89.38, 83.40, 58.72, 17.42, 4.41],  #0
                               [75.54, 74.57, 72.71, 64.22, 43.39, 14.32, 3.89],  #-6
                               [35.73, 34.18, 32.44, 28.09, 17.73, 6.30, 3.26],  #-12
                               [9.37, 9.16, 8.97, 7.65, 6.15, 2.62, 1.86]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_128_capret_r1'] = [[73.40, 70.28, 59.84, 38.52, 15.88, 3.34, 0.90],  #18
                               [73.28, 69.92, 59.08, 37.80, 16.20, 2.84, 0.78],  #12
                               [71.16, 66.74, 56.62, 37.26, 15.58, 3.00, 0.80],  #6
                               [62.38, 59.56, 50.34, 32.06, 13.62, 2.38, 0.58],  #0
                               [38.26, 36.10, 30.48, 20.74, 9.38, 2.18, 0.60],  #-6
                               [9.52, 8.18, 7.02, 5.48, 2.54, 1.00, 0.34],  #-12
                               [1.22, 1.08, 1.04, 0.96, 0.62, 0.34, 0.18]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_128_capret_r5'] = [[92.88, 90.34, 82.18, 62.36, 30.34, 7.26, 1.54],  #18
                               [92.30, 89.88, 82.24, 62.00, 29.06, 5.82, 1.20],  #12
                               [91.46, 88.76, 81.12, 60.02, 29.38, 6.12, 1.36],  #6
                               [86.60, 84.48, 75.72, 54.78, 25.98, 5.66, 1.10],  #0
                               [67.14, 64.00, 56.48, 39.12, 19.82, 4.48, 1.28],  #-6
                               [23.70, 21.08, 17.56, 12.60, 6.82, 3.04, 1.22],  #-12
                               [3.82, 3.42, 2.92, 2.34, 1.70, 1.36, 0.82]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_128_capret_r10'] = [[96.68, 95.36, 90.44, 75.40, 42.34, 10.92, 2.38],  #18
                               [96.40, 95.10, 90.02, 75.88, 41.10, 9.80, 2.34],  #12
                               [95.68, 94.28, 89.50, 73.66, 40.68, 9.94, 2.46],  #6
                               [93.22, 91.78, 86.18, 69.40, 37.08, 8.64, 2.20],  #0
                               [79.96, 77.52, 70.22, 53.24, 28.12, 7.48, 2.08],  #-6
                               [34.34, 31.64, 27.08, 19.50, 11.26, 5.04, 2.26],  #-12
                               [6.42, 5.54, 4.88, 4.22, 3.08, 2.40, 1.36]]   #-18
################################################################### 256 64 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb256_64_imgret_r1'] = [[60.38, 58.46, 51.83, 33.56, 10.16, 1.30, 0.38],  #18
                               [59.22, 57.57, 50.95, 32.84, 9.37, 1.51, 0.41],  #12
                               [55.34, 54.38, 47.36, 30.45, 9.00, 1.35, 0.22],  #6
                               [45.31, 43.40, 37.70, 24.83, 7.94, 1.20, 0.25],  #0
                               [23.29, 21.92, 19.00, 12.80, 4.58, 1.07, 0.38],  #-6
                               [6.14, 5.18, 4.76, 3.49, 1.38, 0.58, 0.36],  #-12
                               [1.04, 1.04, 0.80, 0.72, 0.55, 0.26, 0.20]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_64_imgret_r5'] = [[88.55, 87.35, 83.82, 68.72, 30.82, 5.66, 2.08],  #18
                               [88.08, 87.18, 82.85, 68.17, 29.88, 5.86, 1.76],  #12
                               [86.56, 85.43, 81.42, 66.92, 28.96, 5.44, 1.38],  #6
                               [80.76, 79.04, 74.29, 59.54, 25.37, 4.65, 1.54],  #0
                               [57.56, 56.04, 50.94, 38.70, 17.22, 4.25, 1.47],  #-6
                               [20.65, 19.14, 17.84, 13.60, 5.96, 2.50, 1.57],  #-12
                               [4.75, 4.13, 3.80, 2.86, 2.53, 1.21, 0.86]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_64_imgret_r10'] = [[95.23, 94.23, 92.42, 82.28, 45.12, 10.49, 3.42],  #18
                               [94.86, 94.38, 92.01, 82.60, 44.11, 10.88, 3.32],  #12
                               [93.89, 93.46, 90.98, 81.12, 43.34, 10.74, 2.94],  #6
                               [91.13, 89.83, 87.00, 75.47, 39.19, 8.64, 3.23],  #0
                               [75.05, 73.70, 68.21, 55.94, 28.28, 7.64, 2.88],  #-6
                               [32.80, 31.22, 28.78, 23.03, 11.18, 4.71, 2.73],  #-12
                               [8.94, 8.16, 7.16, 5.86, 4.78, 2.23, 1.52]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_64_capret_r1'] = [[70.32, 65.08, 49.92, 25.82, 7.84, 1.16, 0.54],  #18
                               [69.46, 64.10, 49.26, 25.04, 7.88, 1.30, 0.52],  #12
                               [67.90, 62.14, 48.04, 26.16, 7.78, 1.34, 0.46],  #6
                               [58.68, 53.76, 40.92, 22.72, 7.08, 1.22, 0.46],  #0
                               [34.78, 31.42, 23.38, 14.64, 4.82, 1.08, 0.42],  #-6
                               [7.42, 5.58, 5.62, 3.56, 1.62, 0.64, 0.26],  #-12
                               [1.08, 0.96, 0.86, 0.56, 0.54, 0.18, 0.10]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_64_capret_r5'] = [[90.90, 86.92, 74.38, 45.46, 15.76, 3.02, 0.82],  #18
                               [90.72, 86.34, 73.46, 45.56, 15.24, 2.92, 0.78],  #12
                               [89.28, 84.86, 72.30, 44.76, 15.22, 3.04, 0.86],  #6
                               [84.44, 79.60, 66.12, 41.08, 14.14, 2.72, 0.92],  #0
                               [62.52, 57.04, 45.16, 28.34, 10.32, 2.44, 0.66],  #-6
                               [20.20, 15.90, 13.90, 9.14, 4.52, 1.92, 0.84],  #-12
                               [2.78, 3.12, 2.60, 1.82, 1.80, 1.06, 0.74]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_64_capret_r10'] = [[95.64, 93.16, 84.38, 60.00, 24.26, 5.10, 1.40],  #18
                               [95.92, 92.74, 85.34, 59.86, 23.58, 4.86, 1.42],  #12
                               [94.56, 92.32, 83.56, 58.90, 22.96, 5.06, 1.54],  #6
                               [91.44, 88.44, 79.30, 55.12, 20.82, 4.24, 1.56],  #0
                               [76.08, 71.00, 59.82, 40.50, 15.96, 3.82, 1.18],  #-6
                               [29.58, 24.70, 21.00, 14.26, 7.58, 3.12, 1.58],  #-12
                               [4.94, 4.82, 4.24, 3.10, 3.32, 1.82, 1.42]]   #-18
################################################################### 256 32 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb256_32_imgret_r1'] = [[51.76, 48.83, 40.47, 20.36, 3.61, 0.57, 0.25],  #18
                               [51.46, 48.92, 39.58, 20.10, 3.38, 0.88, 0.26],  #12
                               [48.30, 45.96, 38.24, 19.76, 3.46, 0.54, 0.24],  #6
                               [38.94, 37.59, 31.64, 15.62, 2.87, 0.56, 0.18],  #0
                               [21.60, 20.00, 16.13, 9.02, 2.26, 0.58, 0.25],  #-6
                               [5.34, 3.91, 3.34, 2.14, 1.01, 0.47, 0.20],  #-12
                               [0.94, 0.74, 0.80, 0.66, 0.35, 0.19, 0.23]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_32_imgret_r5'] = [[85.28, 82.97, 76.40, 51.82, 13.39, 2.75, 1.40],  #18
                               [84.41, 82.44, 76.34, 51.80, 13.53, 3.01, 0.95],  #12
                               [82.98, 81.34, 74.70, 49.57, 13.03, 2.62, 1.21],  #6
                               [76.38, 74.39, 68.09, 43.01, 11.40, 2.21, 1.04],  #0
                               [54.51, 51.60, 44.89, 29.22, 9.06, 2.38, 1.10],  #-6
                               [18.53, 15.26, 12.85, 9.24, 3.99, 1.74, 1.01],  #-12
                               [4.06, 3.55, 3.36, 2.77, 1.65, 1.00, 0.99]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_32_imgret_r10'] = [[93.52, 92.09, 87.99, 68.28, 22.75, 5.23, 2.78],  #18
                               [92.65, 91.90, 88.39, 68.31, 22.52, 5.90, 1.96],  #12
                               [92.24, 91.46, 87.30, 66.97, 22.30, 4.90, 2.16],  #6
                               [88.58, 87.67, 82.69, 60.02, 19.72, 4.63, 2.10],  #0
                               [71.90, 68.98, 62.32, 44.56, 15.46, 4.20, 2.11],  #-6
                               [29.69, 25.64, 22.47, 16.16, 7.34, 3.38, 1.97],  #-12
                               [7.55, 6.53, 6.40, 4.86, 3.15, 1.98, 1.86]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_32_capret_r1'] = [[59.20, 50.74, 34.48, 15.38, 2.86, 0.64, 0.38],  #18
                               [59.50, 52.06, 35.14, 15.82, 3.02, 0.80, 0.34],  #12
                               [55.98, 50.18, 34.54, 15.16, 2.90, 0.54, 0.34],  #6
                               [49.38, 43.36, 30.90, 13.70, 2.50, 0.66, 0.30],  #0
                               [29.00, 25.20, 17.70, 9.00, 2.30, 0.52, 0.30],  #-6
                               [5.82, 4.92, 3.28, 2.42, 1.06, 0.66, 0.30],  #-12
                               [0.84, 0.66, 0.58, 0.52, 0.40, 0.26, 0.26]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_32_capret_r5'] = [[85.04, 78.00, 58.32, 28.90, 6.18, 1.02, 0.76],  #18
                               [85.24, 77.34, 59.38, 30.12, 6.78, 1.94, 0.62],  #12
                               [83.64, 76.58, 57.96, 29.58, 6.56, 1.40, 0.86],  #6
                               [76.60, 70.26, 54.62, 26.72, 5.66, 1.32, 0.54],  #0
                               [54.82, 48.32, 35.94, 19.02, 5.26, 1.42, 0.72],  #-6
                               [15.04, 11.52, 8.40, 5.60, 2.52, 1.42, 0.76],  #-12
                               [2.38, 2.08, 1.80, 1.38, 1.14, 0.82, 0.92]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_32_capret_r10'] = [[92.18, 87.72, 71.94, 41.70, 10.34, 2.02, 1.14],  #18
                               [92.20, 87.02, 72.54, 41.92, 10.52, 3.02, 1.06],  #12
                               [91.68, 86.82, 72.02, 41.80, 10.28, 2.56, 1.40],  #6
                               [87.06, 82.60, 68.82, 37.56, 9.64, 2.40, 0.84],  #0
                               [69.36, 61.94, 49.74, 28.48, 8.20, 2.34, 1.02],  #-6
                               [23.98, 18.60, 14.20, 9.26, 4.18, 2.24, 1.28],  #-12
                               [4.04, 3.48, 3.18, 2.44, 2.22, 1.40, 1.38]]   #-18
################################################################### 256 16 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb256_16_imgret_r1'] = [[36.45, 33.96, 24.82, 9.24, 1.30, 0.38, 0.16],  #18
                               [35.41, 33.59, 24.28, 9.32, 1.31, 0.35, 0.20],  #12
                               [34.10, 31.46, 23.85, 8.92, 1.33, 0.32, 0.12],  #6
                               [26.94, 25.88, 20.35, 7.36, 1.04, 0.19, 0.34],  #0
                               [16.00, 14.75, 11.46, 5.13, 1.00, 0.34, 0.23],  #-6
                               [3.93, 3.17,  2.39, 1.10, 0.62, 0.32, 0.18],  #-12
                               [0.69, 0.55, 0.45, 0.42, 0.24, 0.21, 0.12]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_16_imgret_r5'] = [[74.85, 71.78, 59.84, 29.28, 5.99, 1.71, 0.87],  #18
                               [74.55, 71.78, 58.97, 29.57, 6.28, 1.50, 0.94],  #12
                               [72.27, 68.86, 58.34, 27.87, 5.95, 1.83, 0.62],  #6
                               [64.62, 62.16, 52.92, 25.68, 4.82, 1.75, 1.06],  #0
                               [45.66, 43.07, 35.59, 18.50, 4.38, 1.44, 0.77],  #-6
                               [15.06, 12.66, 9.26, 5.95, 2.67, 1.47, 0.87],  #-12
                               [3.12, 2.68, 2.17, 1.86, 1.05, 0.95, 0.83]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_16_imgret_r10'] = [[87.64, 85.65, 76.01, 44.01, 11.46, 3.25, 1.77],  #18
                               [87.47, 85.76, 75.68, 44.22, 11.50, 3.28, 1.77],  #12
                               [86.30, 83.56, 74.91, 42.32, 10.66, 3.56, 1.54],  #6
                               [80.89, 78.76, 69.94, 39.74, 9.47, 3.46, 1.93],  #0
                               [63.33, 60.67, 52.22, 29.98, 7.99, 3.02, 1.62],  #-6
                               [25.37, 21.10, 16.40, 10.83, 4.86, 2.64, 1.66],  #-12
                               [6.41, 4.98, 4.72, 3.48, 2.00, 1.84, 1.54]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_16_capret_r1'] = [[39.18, 33.12, 20.12, 7.48, 1.32, 0.44, 0.30],  #18
                               [38.80, 32.14, 19.72, 7.60, 1.60, 0.42, 0.18],  #12
                               [36.70, 30.72, 20.48, 6.94, 1.50, 0.42, 0.26],  #6
                               [31.98, 27.62, 18.64, 6.54, 1.34, 0.46, 0.18],  #0
                               [20.60, 17.30, 11.68, 4.88, 1.10, 0.46, 0.26],  #-6
                               [4.56, 3.32, 2.04, 1.54, 0.50, 0.36, 0.16],  #-12
                               [0.66, 0.56,  0.48,  0.52, 0.30, 0.26, 0.22]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_16_capret_r5'] = [[69.14, 58.28, 37.84, 14.84, 3.18, 1.16, 0.78],  #18
                               [68.36, 58.24, 38.98, 14.90, 3.12, 1.12, 0.42],  #12
                               [67.78, 55.92, 39.04, 14.54, 3.16, 1.18, 0.50],  #6
                               [60.52, 53.10, 36.76, 14.42, 2.98, 0.92, 0.82],  #0
                               [41.90, 35.80, 26.02, 11.04, 2.30, 0.86, 0.78],  #-6
                               [11.72, 7.94, 5.38, 3.48, 1.48, 0.86, 0.52],  #-12
                               [2.08, 1.60, 1.36, 1.28, 0.64, 0.70, 0.62]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb256_16_capret_r10'] = [[82.10, 71.36, 52.02, 22.72, 5.02, 1.96, 1.52],  #18
                               [81.36, 72.46, 52.22, 22.84, 5.14, 1.82, 0.90],  #12
                               [80.74, 70.18, 52.54, 22.22, 4.94, 1.80, 0.74],  #6
                               [74.80, 66.72, 49.96, 21.18, 4.80, 1.58, 1.28],  #0
                               [56.96, 50.04, 37.14, 17.20, 3.84, 1.62, 1.32],  #-6
                               [18.06, 13.20, 8.86, 5.24, 2.52, 1.48, 0.92],  #-12
                               [3.46, 2.78, 2.16, 2.30, 1.12, 1.34, 1.16]]   #-18
################################################################### 128 256 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb128_256_imgret_r1'] = [[62.65, 61.86, 60.00, 52.02, 32.00, 8.74, 1.30],  #18
                               [60.63, 60.18, 58.10, 49.90, 30.76, 8.67, 1.05],  #12
                               [54.26, 53.74, 51.34, 43.84, 27.09, 6.93, 0.92],  #6
                               [36.33, 36.40, 34.90, 29.68, 18.57, 5.50, 0.94],  #0
                               [14.11, 13.54, 13.10, 11.87, 8.24, 2.47, 0.62],  #-6
                               [2.85, 2.83, 2.64, 2.44, 1.92, 0.81, 0.40],  #-12
                               [0.69, 0.77, 0.29, 0.38, 0.23, 0.08, 0.07]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_256_imgret_r5'] = [[89.27, 89.14, 88.10, 83.83, 67.54, 28.80, 5.31],  #18
                               [88.36, 88.28, 87.16, 82.87, 66.51, 28.48, 4.96],  #12
                               [85.86, 85.28, 83.82, 78.82, 62.32, 24.32, 4.26],  #6
                               [73.88, 73.76, 71.96, 66.28, 50.15, 19.38, 4.20],  #0
                               [41.40, 40.30, 39.73, 36.74, 26.50, 10.04, 2.77],  #-6
                               [11.39, 11.35, 10.80, 9.90, 7.99, 3.44, 1.62],  #-12
                               [3.34, 3.10, 1.45, 1.49, 0.96, 0.48, 0.55]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_256_imgret_r10'] = [[95.36, 95.30, 94.57, 92.38, 81.41, 43.14, 9.72],  #18
                               [95.22, 94.88, 94.27, 91.96, 80.81, 43.20, 9.16],  #12
                               [93.78, 93.34, 92.43, 89.76, 78.00, 38.13, 8.49],  #6
                               [86.85, 86.61, 85.67, 81.23, 66.88, 30.80, 7.44],  #0
                               [58.42, 57.82, 56.79, 53.21, 41.48, 17.30, 5.21],  #-6
                               [18.89, 19.26, 19.00, 16.94, 14.16, 6.24, 2.89],  #-12
                               [6.25, 5.96, 2.66, 2.93, 1.89, 0.99, 1.06]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_256_capret_r1'] = [[74.96, 72.18, 66.70, 50.82, 25.62, 7.20, 1.24],  #18
                               [73.22, 71.10, 65.56, 50.84, 25.08, 7.36, 1.40],  #12
                               [69.30, 67.82, 60.46, 45.68, 24.14, 6.46, 1.28],  #6
                               [55.00, 52.76, 48.54, 34.86, 18.84, 5.18, 0.98],  #0
                               [23.12, 22.12, 19.76, 15.54, 8.84, 2.78, 0.70],  #-6
                               [3.12, 3.52, 2.74, 2.74, 2.00, 0.76, 0.44],  #-12
                               [0.74, 0.52, 0.24, 0.26, 0.22, 0.12, 0.04]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_256_capret_r5'] = [[93.06, 91.88, 87.54, 74.86, 44.88, 15.22, 2.66],  #18
                               [92.36, 91.30, 86.56, 74.32, 44.78, 14.54, 2.70],  #12
                               [91.14, 89.04, 84.10, 70.32, 43.22, 12.70, 2.48],  #6
                               [83.28, 80.84, 75.70, 60.96, 36.02, 11.14, 2.06],  #0
                               [49.36, 46.52, 42.88, 32.78, 20.10, 7.00, 1.88],  #-6
                               [10.18, 9.84, 8.70, 7.14, 5.30, 2.40, 1.18],  #-12
                               [2.30, 1.98, 1.10, 0.88, 0.76, 0.58, 0.08]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_256_capret_r10'] = [[96.78, 95.90, 93.36, 85.20, 59.04, 21.82, 4.74],  #18
                               [96.60, 95.66, 93.36, 85.02, 58.60, 22.16, 4.56],  #12
                               [95.88, 94.72, 91.28, 82.02, 56.44, 19.70, 3.98],  #6
                               [91.82, 89.88, 86.50, 74.16, 49.02, 17.16, 3.34],  #0
                               [63.86, 61.38, 56.10, 45.98, 29.62, 11.38, 3.30],  #-6
                               [16.66, 15.92, 14.46, 11.14, 8.58, 4.22, 2.04],  #-12
                               [3.92, 3.18, 1.78, 1.44, 1.46, 0.94, 0.36]]   #-18
################################################################### 128 128 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb128_128_imgret_r1'] = [[61.84, 60.45, 56.53, 43.66, 19.87, 3.23, 0.54],  #18
                               [59.45, 59.30, 54.18, 42.16, 18.91, 2.76, 0.70],  #12
                               [53.90, 52.09, 48.46, 39.02, 16.96, 2.37, 0.46],  #6
                               [36.09, 35.79, 32.57, 26.58, 13.09, 1.94, 0.52],  #0
                               [13.54, 13.03, 13.31, 11.76, 4.43, 1.48, 0.44],  #-6
                               [2.95, 2.62, 2.39, 2.08, 1.39, 0.40, 0.31],  #-12
                               [0.64, 0.66, 0.71, 0.50, 0.45, 0.43, 0.19]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_128_imgret_r5'] = [[89.00, 88.34, 85.82, 77.84, 50.59, 12.92, 2.91],  #18
                               [88.34, 87.62, 85.15, 77.58, 49.24, 10.70, 2.75],  #12
                               [85.64, 84.12, 81.86, 74.63, 45.59, 9.68, 2.36],  #6
                               [73.60, 73.29, 69.59, 61.46, 38.72, 8.38, 2.25],  #0
                               [40.99, 39.28, 39.22, 34.15, 17.45, 6.34, 2.12],  #-6
                               [11.36, 10.26, 10.43, 9.39, 6.37, 2.21, 1.51],  #-12
                               [2.72, 3.29, 3.14, 2.89, 2.11, 1.72, 0.86]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_128_imgret_r10'] = [[95.17, 94.92, 93.61, 88.80, 67.27, 21.52, 5.50],  #18
                               [95.09, 94.52, 93.35, 88.72, 65.75, 18.60, 5.05],  #12
                               [93.81, 92.83, 91.45, 86.92, 62.62, 17.74, 4.68],  #6
                               [86.55, 86.90, 83.85, 77.57, 54.74, 14.68, 4.35],  #0
                               [58.00, 56.11, 56.41, 50.05, 29.12, 11.64, 4.07],  #-6
                               [19.54, 17.57, 17.95, 16.71, 11.70, 4.19, 2.96],  #-12
                               [5.04, 6.12, 5.93, 5.38, 4.22, 3.22, 1.60]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_128_capret_r1'] = [[73.14, 69.52, 58.46, 37.26, 14.88, 2.74, 0.74],  #18
                               [71.62, 68.62, 58.34, 37.18, 15.48, 2.56, 0.58],  #12
                               [68.12, 64.06, 54.72, 35.98, 14.70, 2.92, 0.58],  #6
                               [54.26, 51.26, 42.44, 29.06, 12.54, 2.38, 0.56],  #0
                               [22.10, 19.30, 18.44, 13.38, 4.92, 1.78, 0.64],  #-6
                               [3.28, 2.30, 2.64, 2.88, 1.44, 0.64, 0.32],  #-12
                               [0.52, 0.60, 0.62, 0.52, 0.38, 0.46, 0.24]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_128_capret_r5'] = [[92.36, 89.30, 82.46, 60.38, 28.84, 5.90, 1.48],  #18
                               [92.38, 89.56, 81.12, 60.56, 28.46, 5.72, 1.30],  #12
                               [90.36, 86.86, 79.10, 60.62, 27.78, 5.34, 1.20],  #6
                               [81.48, 78.82, 69.26, 50.58, 25.60, 4.86, 1.50],  #0
                               [47.78, 42.70, 39.56, 29.80, 11.98, 4.00, 1.42],  #-6
                               [10.22, 7.92, 7.50, 6.60, 4.24, 1.92, 1.40],  #-12
                               [1.88, 1.72, 1.78, 1.56, 1.36, 1.54, 1.00]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_128_capret_r10'] = [[96.64, 94.86, 90.32, 74.54, 41.22, 9.82, 2.46],  #18
                               [96.80, 95.20, 89.48, 74.34, 40.10, 9.64, 2.10],  #12
                               [95.62, 93.48, 88.18, 74.28, 38.90, 8.44, 2.24],  #6
                               [89.92, 87.82, 81.38, 65.02, 36.30, 8.24, 2.18],  #0
                               [62.46, 57.04, 52.72, 42.58, 18.56, 6.58, 2.34],  #-6
                               [15.98, 12.40, 12.56, 10.76, 6.54, 3.24, 2.48],  #-12
                               [3.18, 2.82, 3.20, 2.54, 2.50, 2.46, 1.48]]   #-18
################################################################### 128 64 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb128_64_imgret_r1'] = [[59.94, 58.14, 50.89, 33.09, 9.77, 1.46, 0.18],  #18
                               [57.84, 55.67, 49.12, 31.20, 9.13, 1.25, 0.33],  #12
                               [51.65, 49.88, 43.43, 27.68, 7.83, 1.13, 0.48],  #6
                               [35.24, 33.69, 29.84, 19.54, 6.24, 0.85, 0.34],  #0
                               [13.11, 12.36, 10.75, 8.08, 2.83, 0.78, 0.37],  #-6
                               [2.52, 2.30, 2.06, 1.67, 0.98, 0.37, 0.16],  #-12
                               [0.51, 0.62, 0.46, 0.41, 0.27, 0.25, 0.19]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_64_imgret_r5'] = [[88.62, 87.44, 83.28, 68.72, 31.36, 5.57, 1.34],  #18
                               [87.24, 86.32, 82.50, 67.86, 29.44, 5.38, 1.73],  #12
                               [84.48, 83.08, 79.00, 63.30, 26.52, 4.76, 1.43],  #6
                               [71.87, 70.82, 66.04, 51.26, 21.01, 4.00, 1.63],  #0
                               [39.09, 37.62, 34.48, 27.14, 11.46, 3.70, 1.39],  #-6
                               [10.50, 9.73, 8.54, 6.67, 4.31, 1.75, 0.93],  #-12
                               [2.37, 2.67, 2.60, 2.09, 1.52, 1.13, 0.65]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_64_imgret_r10'] = [[95.00, 94.36, 92.00, 82.32, 46.58, 10.04, 2.77],  #18
                               [94.60, 93.76, 91.74, 81.72, 43.70, 9.65, 3.14],  #12
                               [93.11, 92.44, 89.98, 78.55, 40.45, 9.06, 3.07],  #6
                               [85.48, 84.69, 81.42, 69.30, 33.70, 7.66, 2.95],  #0
                               [56.22, 54.52, 51.14, 41.73, 19.94, 6.93, 2.62],  #-6
                               [18.26, 16.77, 15.13, 12.27, 8.46, 3.24, 1.92],  #-12
                               [4.07, 5.32, 4.75, 4.06, 3.05, 2.10, 1.26]]   #-18
################################  18    12    6      0     -6    -12   -18
acc['symb128_64_capret_r1'] = [[69.88, 64.40, 49.80, 26.24, 7.86, 1.54, 0.48],  #18
                               [69.12, 62.42, 49.36, 26.22, 8.00, 1.56, 0.42],  #12
                               [64.26, 60.26, 45.84, 24.24, 7.28, 1.10, 0.46],  #6
                               [49.26, 44.60, 34.92, 19.54, 5.54, 0.98, 0.62],  #0
                               [20.04, 17.68, 13.96, 8.80, 3.22, 1.04, 0.36],  #-6
                               [2.78, 2.72, 2.26, 1.46, 0.88, 0.32, 0.08],  #-12
                               [0.48, 0.52, 0.44, 0.38, 0.26, 0.18, 0.18]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_64_capret_r5'] = [[90.56, 87.38, 74.08, 45.38, 15.80, 2.96, 0.84],  #18
                               [89.80, 85.66, 73.82, 44.64, 15.62, 3.28, 0.92],  #12
                               [87.66, 83.58, 70.68, 42.94, 14.70, 2.62, 0.84],  #6
                               [77.86, 72.44, 59.74, 37.00, 11.62, 2.16, 1.18],  #0
                               [43.42, 37.90, 30.72, 19.84, 7.26, 2.08, 0.90],  #-6
                               [8.24, 7.08, 5.92, 4.22, 2.90, 1.40, 0.62],  #-12
                               [1.30, 1.68, 1.18, 1.08, 0.92, 0.62, 0.58]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_64_capret_r10'] = [[95.02, 93.06, 85.06, 59.34, 23.82, 4.50, 1.18],  #18
                               [95.00, 92.50, 84.36, 58.54, 23.22, 4.78, 1.32],  #12
                               [93.98, 91.38, 81.76, 57.66, 21.62, 5.10, 1.46],  #6
                               [87.12, 84.14, 73.50, 50.76, 18.32, 4.06, 1.82],  #0
                               [58.58, 51.88, 43.68, 30.02, 11.78, 3.56, 1.42],  #-6
                               [13.60, 11.90, 9.66, 7.24, 4.70, 2.68, 0.94],  #-12
                               [2.16, 2.76, 2.34, 1.92, 1.80, 1.18, 1.18]]   #-18
################################################################### 128 32 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb128_32_imgret_r1'] = [[51.85, 48.95, 40.45, 20.46, 3.48, 0.72, 0.23],  #18
                               [50.24, 47.60, 39.72, 19.59, 3.65, 0.51, 0.22],  #12
                               [44.72, 42.32, 35.11, 17.50, 3.06, 0.38, 0.15],  #6
                               [31.34, 30.40, 25.07, 12.53, 2.35, 0.49, 0.22],  #0
                               [12.63, 10.89, 9.31, 5.58, 1.56, 0.54, 0.26],  #-6
                               [2.44, 2.06, 1.72, 1.24, 0.70, 0.33, 0.19],  #-12
                               [0.59, 0.44, 0.43, 0.45, 0.30, 0.17, 0.18]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_32_imgret_r5'] = [[84.85, 83.25, 76.42, 52.56, 13.60, 3.01, 0.97],  #18
                               [84.14, 82.38, 75.68, 51.02, 13.27, 2.81, 0.87],  #12
                               [80.58, 79.04, 72.27, 46.69, 11.91, 2.49, 1.03],  #6
                               [68.54, 67.02, 60.15, 37.54, 10.82, 2.39, 1.34],  #0
                               [37.21, 34.60, 30.40, 20.59, 6.19, 2.21, 0.91],  #-6
                               [9.48, 8.47, 7.14, 5.66, 3.28, 1.68, 0.95],  #-12
                               [2.95, 2.45, 1.36, 1.80, 1.55, 0.95, 0.88]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_32_imgret_r10'] = [[93.15, 92.30, 88.21, 68.92, 23.22, 6.04, 1.77],  #18
                               [92.48, 92.09, 87.99, 67.68, 22.40, 5.39, 1.77],  #12
                               [91.04, 90.13, 85.66, 63.58, 20.58, 5.15, 2.18],  #6
                               [83.59, 82.39, 76.89, 54.08, 18.42, 4.26, 2.42],  #0
                               [54.34, 51.34, 45.52, 32.84, 11.76, 4.10, 1.94],  #-6
                               [16.31, 14.90, 12.58, 10.14, 6.33, 3.12, 1.83],  #-12
                               [5.49, 4.66, 2.41, 3.59, 3.06, 1.93, 1.74]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_32_capret_r1'] = [[60.90, 51.52, 35.44, 16.04, 3.00, 0.76, 0.34],  #18
                               [58.36, 49.64, 34.80, 15.60, 2.60, 0.62, 0.30],  #12
                               [54.24, 48.44, 34.00, 14.86, 2.82, 0.58, 0.22],  #6
                               [42.74, 38.46, 27.24, 11.82, 2.78, 0.44, 0.36],  #0
                               [17.60, 14.72, 10.84, 6.10, 1.64, 0.36, 0.14],  #-6
                               [2.76, 2.14, 1.56, 1.08, 0.76, 0.48, 0.20],  #-12
                               [0.54, 0.44, 0.22, 0.28, 0.32, 0.20, 0.28]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_32_capret_r5'] = [[85.66, 78.04, 58.38, 30.32, 6.48, 1.60, 0.52],  #18
                               [84.22, 77.20, 59.20, 30.26, 6.42, 1.46, 0.62],  #12
                               [82.00, 73.94, 56.36, 27.56, 6.32, 1.24, 0.52],  #6
                               [71.24, 64.52, 48.90, 24.10, 5.58, 1.14, 0.78],  #0
                               [38.12, 31.50, 24.02, 14.16, 3.58, 1.04, 0.76],  #-6
                               [6.72, 6.20, 4.00, 2.90, 1.84, 1.12, 0.70],  #-12
                               [1.68, 1.32, 0.56, 0.84, 1.04, 0.84, 0.88]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_32_capret_r10'] = [[92.02, 87.08, 72.50, 42.68, 10.64, 2.64, 1.00],  #18
                               [91.84, 87.40, 73.42, 41.84, 10.42, 2.42, 1.10],  #12
                               [90.38, 84.82, 70.04, 38.42, 9.92, 2.14, 0.96],  #6
                               [83.00, 77.02, 63.38, 34.72, 8.94, 1.84, 1.46],  #0
                               [51.18, 44.44, 34.92, 21.36, 6.24, 1.98, 1.38],  #-6
                               [10.96, 9.96, 7.36, 5.42, 3.42, 2.12, 1.08],  #-12
                               [2.76, 2.34, 0.92, 1.36, 1.78, 1.40, 1.44]]   #-18
################################################################### 128 16 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb128_16_imgret_r1'] = [[36.39, 34.20, 24.82, 8.80, 1.33, 0.33, 0.17],  #18
                               [35.12, 31.81, 23.88, 9.22, 1.43, 0.45, 0.18],  #12
                               [30.90, 29.28, 22.24, 7.68, 1.27, 0.27, 0.17],  #6
                               [22.63, 21.45, 17.38, 5.87, 1.33, 0.31, 0.13],  #0
                               [10.33, 9.16, 7.14, 3.25, 0.79, 0.28, 0.25],  #-6
                               [1.92, 1.74, 1.22, 0.85, 0.52, 0.22, 0.18],  #-12
                               [0.67, 0.52, 0.38, 0.37, 0.19, 0.16, 0.14]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_16_imgret_r5'] = [[75.67, 72.05, 60.40, 28.17, 5.98, 1.73, 0.88],  #18
                               [74.24, 70.42, 59.21, 29.01, 5.97, 1.78, 1.02],  #12
                               [69.44, 67.30, 56.36, 26.82, 5.11, 1.35, 0.64],  #6
                               [57.86, 55.90, 47.64, 21.59, 5.14, 1.44, 0.75],  #0
                               [32.10, 30.52, 24.74, 12.97, 3.29, 1.48, 1.00],  #-6
                               [8.00, 7.24, 5.91, 3.91, 2.46, 1.17, 0.78],  #-12
                               [2.59, 2.16, 1.81, 1.45, 1.24, 0.57, 0.64]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_16_imgret_r10'] = [[88.00, 85.92, 76.91, 42.61, 11.20, 3.37, 1.76],  #18
                               [87.66, 85.07, 75.80, 43.44, 10.63, 3.47, 1.77],  #12
                               [84.58, 82.52, 73.62, 41.05, 9.71, 2.92, 1.60],  #6
                               [75.49, 72.91, 65.10, 34.80, 9.45, 2.82, 1.47],  #0
                               [48.29, 46.30, 38.41, 22.26, 6.63, 2.73, 1.62],  #-6
                               [14.01, 13.21, 10.72, 7.33, 4.86, 2.60, 1.60],  #-12
                               [4.62, 4.16, 3.40, 2.97, 2.44, 1.13, 1.32]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_16_capret_r1'] = [[41.22, 31.58, 19.84, 7.36, 1.48, 0.54, 0.40],  #18
                               [39.02, 31.56, 19.32, 7.32, 1.32, 0.36, 0.24],  #12
                               [37.62, 30.38, 19.82, 7.02, 1.34, 0.54, 0.20],  #6
                               [30.86, 25.70, 17.00, 5.50, 1.16, 0.34, 0.22],  #0
                               [12.94, 11.14, 7.78, 3.34, 0.98, 0.38, 0.18],  #-6
                               [2.14, 1.40, 1.36, 0.80, 0.50, 0.34, 0.18],  #-12
                               [0.62, 0.36, 0.56, 0.22, 0.30, 0.16, 0.26]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_16_capret_r5'] = [[70.46, 58.12, 38.44, 14.72, 3.18, 1.40, 1.00],  #18
                               [70.42, 56.88, 38.18, 14.40, 3.24, 1.14, 0.80],  #12
                               [67.04, 56.60, 38.46, 14.16, 2.80, 1.24, 0.44],  #6
                               [59.00, 49.68, 35.48, 12.38, 2.80, 0.58, 0.76],  #0
                               [30.34, 26.04, 18.00, 7.92, 2.00, 1.14, 0.52],  #-6
                               [6.20, 4.34, 3.66, 2.14, 1.42, 0.96, 0.66],  #-12
                               [1.54, 1.14, 1.28, 0.80, 1.00, 0.16, 0.82]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb128_16_capret_r10'] = [[83.02, 72.30, 51.68, 21.84, 5.00, 2.08, 1.60],  #18
                               [82.48, 71.28, 51.74, 22.06, 5.16, 1.98, 1.44],  #12
                               [79.62, 70.94, 51.52, 21.58, 4.74, 2.22, 0.68],  #6
                               [72.90, 64.14, 47.94, 19.30, 4.76, 0.98, 1.24],  #0
                               [42.98, 37.72, 27.40, 12.76, 3.40, 2.10, 0.86],  #-6
                               [9.90, 7.38, 5.92, 3.78, 2.42, 1.66, 1.08],  #-12
                               [2.58, 2.00, 1.82, 1.52, 1.44, 0.40, 1.42]]   #-18
################################################################### 64 256 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb64_256_imgret_r1'] = [[59.87, 58.96, 57.14, 49.47, 30.05, 7.60, 0.99],  #18
                               [56.35, 55.27, 53.82, 46.44, 27.68, 6.83, 0.87],  #12
                               [45.68, 45.80, 44.09, 36.78, 22.62, 5.51, 0.76],  #6
                               [24.88, 24.92, 23.67, 20.82, 13.32, 3.42, 0.57],  #0
                               [6.47, 6.92, 6.44, 5.58, 3.90, 1.43, 0.49],  #-6
                               [1.23, 1.18, 1.06, 1.15, 1.09, 0.74, 0.25],  #-12
                               [0.38, 0.46, 0.37, 0.24, 0.42, 0.34, 0.13]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_256_imgret_r5'] = [[88.03, 87.86, 86.80, 82.18, 65.68, 25.66, 4.72],  #18
                               [86.91, 86.21, 85.62, 80.64, 63.42, 22.92, 4.16],  #12
                               [80.84, 80.44, 79.55, 73.91, 56.11, 19.49, 3.64],  #6
                               [60.60, 59.83, 58.13, 53.75, 39.20, 13.97, 2.98],  #0
                               [23.23, 22.86, 22.61, 20.28, 15.81, 6.29, 2.05],  #-6
                               [5.63, 5.32, 5.26, 5.30, 4.98, 2.89, 1.29],  #-12
                               [2.20, 2.04, 2.12, 1.24, 1.77, 1.53, 0.66]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_256_imgret_r10'] = [[95.04, 94.76, 94.20, 91.60, 80.17, 39.38, 8.81],  #18
                               [94.27, 93.92, 93.74, 90.87, 78.10, 36.28, 7.72],  #12
                               [91.19, 90.80, 90.51, 86.65, 72.74, 31.53, 7.17],  #6
                               [77.02, 76.37, 75.75, 70.79, 55.87, 23.64, 5.85],  #0
                               [37.21, 36.58, 35.53, 32.56, 26.40, 11.27, 4.06],  #-6
                               [10.09, 9.88, 9.82, 9.35, 8.58, 5.40, 2.29],  #-12
                               [4.24, 3.96, 3.99, 2.45, 3.33, 3.20, 1.36]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_256_capret_r1'] = [[71.98, 69.96, 64.62, 48.92, 25.44, 7.00, 1.10],  #18
                               [71.28, 68.62, 62.08, 48.32, 23.16, 6.30, 1.02],  #12
                               [63.42, 61.08, 56.00, 41.98, 21.64, 5.38, 0.88],  #6
                               [40.80, 38.56, 35.54, 27.04, 15.30, 3.80, 0.64],  #0
                               [9.38, 9.98, 8.80, 6.60, 4.92, 1.56, 0.50],  #-6
                               [1.38, 1.04, 1.12, 1.02, 0.82, 0.46, 0.26],  #-12
                               [0.40, 0.50, 0.26, 0.42, 0.30, 0.36, 0.20]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_256_capret_r5'] = [[91.90, 90.86, 86.98, 73.66, 43.90, 13.30, 2.62],  #18
                               [91.72, 89.96, 85.70, 71.88, 42.12, 13.00, 2.04],  #12
                               [88.00, 86.10, 81.62, 66.32, 39.68, 11.56, 1.92],  #6
                               [72.18, 70.12, 62.96, 50.08, 29.84, 8.32, 1.80],  #0
                               [25.92, 25.74, 22.04, 17.02, 12.00, 4.08, 1.44],  #-6
                               [4.80, 4.06, 4.04, 3.32, 2.64, 1.74, 1.10],  #-12
                               [1.44, 1.18, 1.14, 0.64, 0.68, 0.94, 0.44]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_256_capret_r10'] = [[96.50, 95.58, 93.24, 84.30, 58.24, 20.46, 4.16],  #18
                               [96.38, 94.88, 92.92, 82.80, 55.38, 19.54, 3.88],  #12
                               [94.18, 92.92, 89.86, 78.72, 52.74, 17.68, 3.60],  #6
                               [83.68, 82.10, 76.88, 64.74, 41.62, 13.22, 2.96],  #0
                               [37.82, 36.24, 32.68, 26.26, 18.22, 6.86, 2.88],  #-6
                               [8.06, 6.72, 6.94, 5.72, 4.56, 2.82, 1.86],  #-12
                               [2.56, 2.06, 2.04, 1.28, 1.46, 1.42, 0.94]]   #-18
################################################################### 64 128 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb64_128_imgret_r1'] = [[59.16, 57.89, 54.24, 41.40, 18.75, 3.33, 0.63],  #18
                               [56.37, 54.91, 50.53, 39.01, 16.70, 2.62, 0.46],  #12
                               [45.51, 45.10, 41.12, 31.60, 13.33, 2.09, 0.38],  #6
                               [23.99, 23.75, 22.18, 18.57, 8.59, 1.38, 0.36],  #0
                               [6.28, 6.81, 6.18, 5.07, 3.03, 1.05, 0.38],  #-6
                               [1.02, 1.09, 1.14, 1.16, 0.88, 0.35, 0.17],  #-12
                               [0.46, 0.38, 0.35, 0.32, 0.22, 0.25, 0.14]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_128_imgret_r5'] = [[87.83, 87.31, 85.63, 76.46, 48.62, 12.14, 2.55],  #18
                               [86.62, 86.17, 83.26, 74.71, 45.99, 10.47, 2.08],  #12
                               [80.70, 80.38, 77.45, 68.07, 40.44, 8.44, 1.97],  #6
                               [59.23, 58.71, 55.89, 48.54, 28.53, 6.84, 1.90],  #0
                               [23.10, 22.90, 21.87, 18.58, 12.42, 4.73, 1.45],  #-6
                               [4.34, 4.81, 5.01, 4.80, 3.70, 2.06, 1.02],  #-12
                               [2.07, 2.02, 1.89, 1.48, 1.56, 1.54, 0.66]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_128_imgret_r10'] = [[94.81, 94.45, 93.33, 88.03, 65.35, 20.60, 4.68],  #18
                               [94.15, 93.80, 92.43, 87.31, 62.68, 17.89, 4.24],  #12
                               [91.02, 90.97, 88.86, 82.83, 56.97, 15.17, 3.88],  #6
                               [76.15, 75.65, 73.34, 66.40, 42.71, 12.82, 3.72],  #0
                               [36.37, 35.46, 34.33, 30.32, 20.99, 8.67, 2.73],  #-6
                               [8.20, 8.56, 9.18, 8.86, 6.88, 3.85, 1.93],  #-12
                               [4.11, 3.87, 3.77, 3.26, 3.10, 2.59, 1.32]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_128_capret_r1'] = [[71.66, 67.64, 58.22, 36.16, 15.02, 2.78, 0.44],  #18
                               [70.16, 66.28, 55.52, 35.82, 13.64, 2.52, 0.58],  #12
                               [63.04, 59.00, 49.46, 30.88, 12.90, 2.36, 0.54],  #6
                               [39.14, 36.70, 31.48, 20.78, 8.90, 1.62, 0.48],  #0
                               [9.24, 8.88, 7.50, 5.54, 3.46, 1.24, 0.54],  #-6
                               [0.74, 1.00, 0.94, 0.98, 0.66, 0.50, 0.18],  #-12
                               [0.36, 0.28, 0.30, 0.32, 0.34, 0.26, 0.20]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_128_capret_r5'] = [[91.58, 89.16, 82.26, 59.86, 28.40, 6.08, 0.98],  #18
                               [91.44, 87.64, 79.46, 59.40, 26.46, 5.26, 1.24],  #12
                               [86.78, 84.64, 75.92, 54.04, 25.18, 5.18, 1.22],  #6
                               [69.72, 65.64, 56.32, 41.20, 18.58, 3.94, 1.26],  #0
                               [25.02, 23.00, 19.30, 14.24, 8.26, 3.16, 1.34],  #-6
                               [3.24, 3.30, 3.18, 2.64, 2.10, 1.58, 0.82],  #-12
                               [1.20, 1.12, 0.96, 0.88, 0.86, 0.82, 0.62]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_128_capret_r10']  = [[96.24, 94.72, 90.18, 73.60, 40.06, 9.98, 2.18],  #18
                               [95.92, 93.98, 89.10, 73.00, 38.10, 8.90, 2.10],  #12
                               [93.48, 91.86, 85.98, 68.40, 35.58, 8.38, 1.84],  #6
                               [81.10, 78.06, 70.02, 54.56, 27.14, 6.68, 2.26],  #0
                               [36.72, 34.34, 29.38, 21.90, 13.54, 5.02, 2.02],  #-6
                               [5.68, 5.46, 5.26, 4.68, 3.86, 2.34, 1.60],  #-12
                               [2.52, 2.08, 1.74, 1.60, 1.52, 1.34, 1.18]]   #-18
################################################################### 64 64 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb64_64_imgret_r1'] = [[57.93, 55.92, 49.82, 32.14, 8.35, 0.76, 0.32],  #18
                               [54.79, 52.52, 46.10, 29.48, 7.79, 1.46, 0.18],  #12
                               [44.22, 43.64, 37.36, 23.80, 6.20, 1.17, 0.16],  #6
                               [22.40, 22.73, 21.78, 15.54, 3.03, 1.10, 0.29],  #0
                               [6.91, 6.14, 5.24, 4.94, 1.98, 0.48, 0.29],  #-6
                               [1.30, 1.27, 1.23, 1.04, 0.97, 0.39, 0.21],  #-12
                               [0.42, 0.38, 0.31, 0.50, 0.46, 0.36, 0.05]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_64_imgret_r5'] = [[87.78, 86.71, 82.84, 68.05, 28.48, 3.69, 1.62],  #18
                               [85.97, 84.72, 80.91, 65.22, 26.48, 5.87, 1.19],  #12
                               [79.77, 79.54, 73.93, 57.95, 22.76, 5.10, 1.15],  #6
                               [56.45, 57.44, 54.15, 43.87, 12.86, 4.10, 1.42],  #0
                               [23.30, 21.54, 19.43, 17.79, 8.05, 2.70, 1.66],  #-6
                               [5.50, 5.18, 4.75, 3.89, 3.86, 1.54, 0.95],  #-12
                               [2.26, 1.70, 1.49, 2.25, 1.78, 1.53, 0.40]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_64_imgret_r10'] = [[94.77, 94.25, 91.72, 82.31, 43.14, 7.09, 2.96],  #18
                               [93.72, 93.15, 90.96, 79.90, 40.90, 11.11, 2.70],  #12
                               [90.35, 90.52, 86.65, 74.68, 36.46, 8.79, 2.25],  #6
                               [73.67, 74.78, 71.03, 61.03, 22.19, 7.72, 2.46],  #0
                               [36.17, 33.71, 31.36, 28.95, 13.98, 5.39, 3.32],  #-6
                               [9.92, 9.35, 8.68, 7.30, 7.07, 2.91, 1.97],  #-12
                               [4.06, 3.55, 2.84, 4.01, 3.23, 2.87, 0.73]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_64_capret_r1'] = [[68.92, 61.88, 48.90, 25.24, 7.30, 0.98, 0.36],  #18
                               [66.92, 61.00, 47.20, 24.98, 7.04, 1.72, 0.32],  #12
                               [58.78, 55.04, 40.40, 21.18, 6.14, 1.30, 0.48],  #6
                               [34.40, 33.62, 26.94, 16.68, 3.12, 1.02, 0.22],  #0
                               [10.04, 8.10, 6.24, 5.54, 1.88, 0.66, 0.24],  #-6
                               [1.24, 1.12, 1.22, 0.78, 0.80, 0.36, 0.20],  #-12
                               [0.54, 0.28, 0.32, 0.40, 0.24, 0.26, 0.08]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_64_capret_r5'] = [[90.24, 85.44, 73.78, 45.76, 14.72, 1.64, 0.62],  #18
                               [89.14, 84.44, 71.86, 43.90, 14.18, 3.04, 0.88],  #12
                               [84.42, 81.10, 66.24, 40.42, 13.18, 3.32, 0.88],  #6
                               [63.24, 61.38, 51.20, 32.60, 7.52, 2.30, 0.50],  #0
                               [25.42, 20.26, 15.40, 13.22, 4.56, 1.86, 0.88],  #-6
                               [4.32, 3.66, 3.18, 2.26, 2.06, 1.28, 0.84],  #-12
                               [1.42, 1.26, 0.68, 1.34, 0.76, 0.84, 0.14]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_64_capret_r10'] = [[95.56, 92.92, 84.62, 60.22, 22.60, 2.64, 1.18],  #18
                               [94.42, 92.00, 82.78, 57.72, 21.04, 4.98, 1.48],  #12
                               [92.02, 89.90, 78.90, 53.88, 20.30, 5.02, 1.48],  #6
                               [76.96, 75.16, 65.06, 45.44, 12.44, 3.80, 0.98],  #0
                               [36.82, 30.20, 23.72, 20.50, 8.04, 2.74, 1.74],  #-6
                               [7.36, 6.06, 5.28, 4.02, 3.76, 2.08, 1.50],  #-12
                               [2.46, 2.22, 1.20, 2.10, 1.62, 1.42, 0.22]]   #-18

################################################################### 64 32 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb64_32_imgret_r1'] = [[51.01, 48.40, 39.98, 19.53, 3.30, 0.63, 0.25],  #18
                               [47.92, 46.01, 38.16, 18.46, 3.36, 0.63, 0.24],  #12
                               [39.04, 38.30, 30.32, 15.19, 3.04, 0.39, 0.20],  #6
                               [22.50, 20.84, 16.99, 8.71, 2.09, 0.62, 0.26],  #0
                               [6.16, 5.67, 5.09, 2.86, 1.03, 0.35, 0.18],  #-6
                               [1.20, 1.00, 1.00, 0.70, 0.52, 0.26, 0.20],  #-12
                               [0.45, 0.40, 0.36, 0.32, 0.12, 0.21, 0.12]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_32_imgret_r5'] = [[84.73, 83.03, 76.19, 50.62, 13.26, 2.86, 1.31],  #18
                               [82.68, 81.28, 73.96, 48.39, 12.59, 2.91, 1.10],  #12
                               [76.56, 75.17, 67.92, 43.46, 11.24, 2.30, 1.08],  #6
                               [56.18, 54.02, 47.62, 28.54, 9.32, 2.34, 1.21],  #0
                               [21.88, 20.75, 17.72, 11.62, 4.92, 1.62, 1.06],  #-6
                               [5.05, 4.63, 3.88, 3.27, 2.31, 1.32, 0.89],  #-12
                               [2.10, 1.96, 1.84, 1.48, 0.75, 0.90, 0.38]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_32_imgret_r10'] = [[93.28, 92.61, 87.74, 67.54, 22.76, 5.62, 2.50],  #18
                               [92.03, 91.44, 86.76, 64.72, 21.62, 5.88, 2.30],  #12
                               [89.03, 87.54, 82.60, 60.04, 18.92, 4.58, 2.11],  #6
                               [73.45, 71.72, 65.12, 43.66, 16.24, 3.95, 2.47,],  #0
                               [34.66, 33.18, 28.90, 20.20, 9.02, 3.14, 2.08],  #-6
                               [9.04, 8.86, 7.32, 6.15, 4.20, 2.67, 1.68],  #-12
                               [3.85, 3.76, 3.40, 2.98, 1.60, 1.79, 0.99]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_32_capret_r1'] = [[59.64, 52.16, 34.72, 15.18, 3.00, 0.66, 0.32],  #18
                               [58.04, 50.44, 33.68, 14.46, 3.32, 0.72, 0.34],  #12
                               [51.98, 45.00, 31.12, 13.50, 2.68, 0.64, 0.24],  #6
                               [34.08, 28.94, 20.06, 8.68, 2.10, 0.62, 0.30],  #0
                               [8.18, 6.70, 5.74, 2.82, 1.32, 0.48, 0.24],  #-6
                               [0.68, 1.14, 0.90, 0.62, 0.44, 0.34, 0.18],  #-12
                               [0.36, 0.28, 0.34, 0.26, 0.22, 0.18, 0.06]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_32_capret_r5'] = [[85.36, 79.08, 58.36, 29.38, 6.46, 1.70, 1.00],  #18
                               [84.40, 76.88, 56.94, 28.32, 6.42, 1.68, 0.96],  #12
                               [80.50, 72.62, 54.32, 26.74, 5.86, 1.28, 0.60],  #6
                               [62.10, 55.18, 38.94, 18.44, 4.76, 1.52, 0.86],  #0
                               [20.80, 18.24, 14.00, 7.60, 2.78, 1.12, 0.84],  #-6
                               [3.42, 3.46, 2.24, 1.90, 1.28, 1.02, 0.48],  #-12
                               [1.12, 1.14, 1.26, 1.00, 0.36, 0.72, 0.10]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_32_capret_r10'] = [[92.80, 88.14, 72.54, 41.48, 10.48, 2.96, 1.68],  #18
                               [92.24, 87.30, 71.62, 39.50, 10.50, 2.86, 1.58],  #12
                               [90.10, 84.02, 68.90, 37.98, 10.12, 2.24, 1.14],  #6
                               [75.86, 69.06, 52.40, 28.32, 7.80, 2.56, 1.48],  #0
                               [31.10, 26.72, 20.64, 12.22, 4.48, 2.04, 1.42],  #-6
                               [6.22, 5.78, 3.88, 3.26, 2.66, 1.78, 1.10],  #-12
                               [2.28, 2.04, 2.36, 1.76, 0.54, 1.26, 0.24]]   #-18
################################################################### 64 16 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb64_16_imgret_r1'] = [[36.10, 33.32, 23.97, 8.90, 1.76, 0.35, 0.18],  #18
                               [34.11, 31.26, 22.71, 8.46, 1.30, 0.19, 0.09],  #12
                               [27.82, 26.17, 19.52, 7.17, 1.10, 0.32, 0.30],  #6
                               [17.31, 15.78, 12.68, 4.55, 0.82, 0.37, 0.20],  #0
                               [5.59, 5.27, 3.42, 1.51, 0.54, 0.17, 0.13],  #-6
                               [1.04, 0.75, 0.91, 0.52, 0.34, 0.15, 0.04],  #-12
                               [0.37, 0.30, 0.31, 0.29, 0.22, 0.09, 0.09]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_16_imgret_r5'] = [[74.94, 71.35, 59.79, 29.34, 6.31, 1.49, 1.00],  #18
                               [72.69, 68.94, 57.47, 28.05, 5.87, 1.52, 0.92],  #12
                               [65.33, 63.34, 52.48, 24.93, 5.08, 1.52, 1.03],  #6
                               [47.48, 45.43, 38.14, 16.86, 4.12, 1.37, 0.80],  #0
                               [19.99, 18.28, 14.37, 7.64, 2.72, 1.08, 0.74],  #-6
                               [4.66, 3.68, 4.00, 2.79, 1.77, 0.90, 0.51],  #-12
                               [1.90, 1.60, 1.30, 1.51, 1.23, 0.50, 0.47]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_16_imgret_r10'] = [[87.72, 85.18, 76.38, 43.75, 11.24, 3.12, 1.88],  #18
                               [86.51, 84.20, 74.18, 42.44, 10.30, 2.97, 1.70],  #12
                               [81.30, 79.47, 69.66, 39.29, 9.52, 2.99, 1.74],  #6
                               [65.47, 62.84, 54.88, 27.90, 7.66, 2.75, 1.56],  #0
                               [32.52, 29.82, 24.54, 13.92, 5.18, 2.18, 1.56],  #-6
                               [8.78, 6.52, 7.62, 5.19, 3.48, 1.81, 1.10],  #-12
                               [3.43, 3.04, 2.45, 2.85, 2.36, 1.09, 0.94]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_16_capret_r1'] = [[40.56, 30.92, 19.02, 7.16, 1.36, 0.46, 0.28],  #18
                               [39.68, 31.06, 19.40, 7.38, 1.48, 0.50, 0.06],  #12
                               [34.76, 28.46, 18.36, 6.76, 1.16, 0.58, 0.10],  #6
                               [24.52, 21.24, 14.24, 4.82, 0.96, 0.38, 0.10],  #0
                               [7.32, 6.46, 4.22, 2.22, 0.64, 0.42, 0.14],  #-6
                               [0.90, 0.70, 0.72, 0.54, 0.30, 0.12, 0.12],  #-12
                               [0.24, 0.38, 0.28, 0.26, 0.24, 0.12, 0.12]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_16_capret_r5'] = [[70.26, 56.86, 38.00, 14.98, 3.10, 0.94, 0.56],  #18
                               [69.44, 56.28, 38.38, 15.38, 3.02, 0.98, 0.50],  #12
                               [66.40, 54.52, 36.12, 13.92, 2.68, 0.92, 0.70],  #6
                               [51.68, 43.38, 29.34, 9.80, 2.24, 1.08, 0.60],  #0
                               [19.28, 16.44, 9.96, 5.10, 1.64, 1.02, 0.56],  #-6
                               [3.38, 2.18, 2.18, 1.66, 1.18, 0.66, 0.16],  #-12
                               [1.24, 1.12, 0.56, 0.94, 0.92, 0.54, 0.58]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb64_16_capret_r10'] = [[82.94, 71.66, 52.08, 22.28, 5.28, 1.50, 1.18],  #18
                               [82.82, 70.64, 50.84, 22.40, 4.84, 1.54, 1.02],  #12
                               [80.46, 67.98, 49.16, 20.66, 4.84, 1.72, 1.34],  #6
                               [66.56, 57.00, 41.66, 16.00, 3.96, 1.98, 1.18],  #0
                               [29.02, 23.86, 15.82, 8.10, 2.96, 1.56, 1.04],  #-6
                               [5.54, 4.04, 4.02, 2.74, 2.14, 1.16, 0.30],  #-12
                               [2.30, 1.94, 0.98, 1.64, 1.42, 0.94, 0.84]]   #-18
################################################################### 32 256 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb32_256_imgret_r1'] = [[51.03, 50.68, 48.32, 41.88, 25.78, 5.33, 0.57],  #18
                               [45.48, 45.26, 43.82, 38.53, 22.06, 4.71, 0.67],  #12
                               [33.16, 32.54, 31.65, 28.20, 17.08, 3.50, 0.59],  #6
                               [13.50, 13.64, 13.62, 11.99, 8.54, 2.10, 0.56],  #0
                               [2.96, 2.80, 2.88, 2.44, 2.10, 1.24, 0.45],  # -6
                               [0.76, 0.55, 0.71, 0.73, 0.60, 0.46, 0.22],  # -12
                               [0.28, 0.30, 0.26, 0.37, 0.22, 0.32, 0.17]]  # -18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_256_imgret_r5'] = [[84.69, 84.53, 83.11, 78.19, 60.94, 21.20, 2.73],  #18
                               [81.44, 81.23, 79.91, 75.45, 55.87, 17.21, 3.08],  #12
                               [70.46, 69.56, 69.12, 64.82, 46.44, 13.60, 2.27],  #6
                               [40.19, 40.81, 39.79, 36.88, 27.34, 9.17, 2.30],  #0
                               [11.47, 11.78, 11.57, 10.07, 8.32, 5.05, 2.02],  #-6
                               [3.40, 2.52, 3.14, 3.03, 2.80, 2.21, 1.03],  #-12
                               [1.42, 1.07, 1.48, 1.57, 0.98, 1.35, 0.82]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_256_imgret_r10'] = [[93.31, 93.17, 92.35, 89.53, 76.94, 33.96, 5.46],  #18
                               [91.52, 91.35, 90.81, 88.10, 72.81, 28.43, 6.12],  #12
                               [84.65, 84.29, 83.86, 80.30, 63.55, 23.04, 4.55],  #6
                               [57.50, 58.11, 56.76, 53.82, 41.88, 16.18, 4.50],  #0
                               [19.77, 19.72, 19.60, 17.45, 14.29, 9.04, 3.76],  #-6
                               [6.40, 4.70, 6.25, 5.90, 5.12, 4.24, 1.95],  #-12
                               [2.75, 2.29, 2.84, 2.92, 1.84, 2.58, 1.79]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_256_capret_r1'] = [[63.46, 61.74, 56.74, 42.40, 22.76, 5.54, 0.60],  #18
                               [59.60, 59.00, 52.88, 40.24, 21.04, 4.96, 0.76],  #12
                               [50.60, 47.26, 44.50, 33.98, 17.32, 3.58, 0.78],  #6
                               [22.92, 21.76, 21.04, 15.74, 9.06, 2.44, 0.50],  #0
                               [3.92, 3.52, 3.68, 2.64, 1.78, 1.12, 0.38],  #-6
                               [0.50, 0.52, 0.58, 0.72, 0.44, 0.42, 0.26],  #-12
                               [0.26, 0.22, 0.16, 0.16, 0.24, 0.20, 0.12]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_256_capret_r5'] = [[88.68, 88.22, 82.56, 68.00, 41.80, 11.68, 1.12],  #18
                               [87.18, 85.70, 79.56, 66.48, 40.36, 10.06, 1.70],  #12
                               [79.84, 77.38, 73.36, 58.98, 33.68, 8.62, 1.74],  #6
                               [50.52, 48.40, 44.72, 34.98, 19.64, 5.72, 1.34],  #0
                               [11.82, 10.86, 10.42, 8.08, 5.16, 3.20, 1.46],  #-6
                               [2.60, 2.22, 2.42, 2.00, 1.58, 1.14, 0.94],  #-12
                               [0.96, 0.86, 0.76, 0.84, 0.60, 0.60, 0.44]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_256_capret_r10'] = [[94.56, 94.64, 90.84, 80.50, 55.54, 18.04, 1.92],  #18
                               [94.04, 93.36, 89.58, 79.00, 53.32, 16.08, 3.04],  #12
                               [89.58, 88.20, 84.42, 72.86, 47.00, 13.40, 2.80],  #6
                               [64.22, 63.18, 57.92, 48.12, 30.08, 9.24, 2.26],  #0
                               [18.72, 17.48, 16.54, 13.18, 8.42, 5.64, 2.34],  #-6
                               [4.62, 3.68, 4.36, 3.66, 2.78, 2.26, 1.68],  #-12
                               [2.04, 1.82, 1.66, 1.82, 0.96, 1.28, 0.96]]   #-18

################################################################### 32 128 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb32_128_imgret_r1'] = [[50.79, 50.04, 47.09, 36.92, 16.12, 2.38, 0.49],  #18
                               [45.31, 45.18, 42.70, 32.92, 14.30, 1.89, 0.54],  #12
                               [32.05, 32.28, 30.82, 24.85, 10.55, 1.66, 0.40],  #6
                               [13.14, 13.77, 13.13, 10.00, 5.17, 1.04, 0.22],  #0
                               [2.90, 3.14, 2.93, 2.26, 1.46, 0.62, 0.23],  #-6
                               [0.69, 0.69, 0.74, 0.74, 0.62, 0.38, 0.23],  #-12
                               [0.30, 0.29, 0.30, 0.30, 0.27, 0.26, 0.15]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_128_imgret_r5'] = [[84.79, 84.15, 81.80, 73.06, 44.42, 10.13, 2.08],  #18
                               [81.11, 80.85, 78.66, 69.86, 40.97, 8.16, 2.22],  #12
                               [70.27, 70.40, 67.87, 59.54, 32.84, 7.27, 1.69],  #6
                               [39.32, 39.98, 38.04, 33.64, 19.11, 5.05, 1.50],  #0
                               [11.72, 11.25, 11.00, 9.30, 6.59, 3.13, 1.30],  #-6
                               [3.35, 3.05, 3.08, 2.97, 2.48, 1.90, 1.10],  #-12
                               [1.54, 1.32, 1.44, 1.49, 1.29, 1.00, 0.93]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_128_imgret_r10'] = [[93.40, 93.10, 91.69, 86.13, 61.75, 18.06, 4.22],  #18
                               [91.62, 90.92, 89.88, 84.12, 57.51, 14.48, 4.08],  #12
                               [84.90, 84.87, 83.04, 75.38, 49.05, 13.14, 3.23],  #6
                               [56.52, 57.03, 55.04, 50.10, 30.86, 9.16, 2.97],  #0
                               [19.74, 19.44, 19.14, 16.14, 11.49, 5.93, 2.60],  #-6
                               [5.72, 6.12, 5.92, 5.58, 4.51, 3.36, 2.08],  #-12
                               [2.99, 2.62, 2.74, 2.81, 2.43, 1.99, 1.79]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_128_capret_r1'] = [[63.34, 61.26, 51.04, 32.58, 13.66, 2.84, 0.56],  #18
                               [60.32, 56.28, 48.62, 32.74, 12.44, 1.84, 0.52],  #12
                               [49.34, 47.02, 39.66, 26.96, 10.74, 1.74, 0.42],  #6
                               [22.04, 21.38, 18.30, 12.58, 5.24, 1.18, 0.40],  #0
                               [3.44, 3.70, 3.06, 2.00, 1.52, 0.50, 0.30],  #-6
                               [0.54, 0.56, 0.66, 0.54, 0.32, 0.34, 0.16],  #-12
                               [0.36, 0.24, 0.16, 0.28, 0.16, 0.10, 0.24]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_128_capret_r5'] = [[88.84, 86.04, 77.30, 55.46, 27.34, 5.40, 1.30],  #18
                               [86.62, 83.28, 75.68, 54.80, 25.54, 4.58, 1.20],  #12
                               [79.82, 75.82, 67.04, 48.66, 21.78, 4.04, 0.96],  #6
                               [48.44, 46.02, 39.68, 28.14, 12.92, 3.10, 1.04],  #0
                               [11.68, 11.22, 9.80, 6.08, 4.28, 1.56, 0.98],  #-6
                               [2.56, 2.62, 2.36, 2.14, 1.18, 1.16, 0.80],  #-12
                               [1.48, 0.98, 1.10, 1.00, 0.76, 0.66, 0.84]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_128_capret_r10'] = [[94.72, 92.20, 86.98, 70.14, 38.32, 8.60, 2.06],  #18
                               [93.54, 91.60, 86.62, 68.50, 36.62, 7.56, 2.10],  #12
                               [89.80, 87.40, 79.98, 62.36, 31.84, 7.06, 1.70],  #6
                               [62.80, 60.78, 53.76, 40.56, 20.66, 5.04, 1.98],  #0
                               [18.64, 17.96, 15.24, 10.22, 6.96, 2.78, 1.72],  #-6
                               [4.90, 4.70, 4.14, 3.54, 2.34, 1.88, 1.30],  #-12
                               [2.44, 1.90, 2.10, 1.88, 1.50, 1.30, 1.56]]   #-18
################################################################### 32 64 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb32_64_imgret_r1'] = [[50.69, 50.25, 44.49, 29.57, 8.56, 1.20, 0.36],  #18
                               [45.23, 44.62, 40.49, 25.42, 7.64, 1.01, 0.36],  #12
                               [32.95, 31.96, 28.54, 19.32, 6.02, 0.98, 0.22],  #6
                               [13.18, 13.33, 11.57, 8.17, 2.96, 0.60, 0.16],  #0
                               [2.69, 3.12, 1.78, 1.91, 1.23, 0.54, 0.22],  #-6
                               [0.67, 0.72, 0.54, 0.72, 0.41, 0.18, 0.14],  #-12
                               [0.27, 0.31, 0.26, 0.31, 0.25, 0.19, 0.04]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_64_imgret_r5'] = [[84.30, 83.82, 79.92, 65.11, 27.56, 5.21, 1.79],  #18
                               [81.56, 80.62, 76.89, 60.60, 25.04, 4.61, 1.56],  #12
                               [69.98, 69.09, 64.78, 51.22, 20.09, 4.02, 1.33],  #6
                               [38.81, 39.07, 35.95, 27.46, 11.38, 3.27, 1.16],  #0
                               [11.15, 11.64, 8.12, 7.95, 5.40, 2.26, 0.96],  #-6
                               [3.40, 3.16, 2.64, 2.98, 2.08, 1.00, 0.96],  #-12
                               [1.32, 1.35, 1.30, 1.34, 1.34, 0.94, 0.66]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_64_imgret_r10'] = [[92.89, 92.67, 90.12, 80.00, 41.67, 9.41, 3.12],  #18
                               [91.46, 91.15, 88.61, 76.93, 38.80, 8.54, 2.90],  #12
                               [84.76, 83.87, 80.57, 68.23, 32.28, 7.49, 2.70],  #6
                               [56.19, 55.98, 52.37, 42.13, 20.04, 6.55, 2.31],  #0
                               [19.01, 19.34, 14.30, 13.77, 9.47, 4.59, 1.89],  #-6
                               [6.20, 5.91, 4.98, 5.34, 4.22, 1.96, 1.93],  #-12
                               [2.59, 2.46, 2.47, 2.60, 2.37, 1.84, 1.16]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_64_capret_r1'] = [[61.58, 57.60, 43.54, 23.46, 6.42, 1.18, 0.40],  #18
                               [59.18, 53.40, 42.00, 23.46, 6.64, 1.44, 0.54],  #12
                               [48.76, 45.36, 34.40, 19.62, 5.70, 0.90, 0.38],  #6
                               [22.14, 20.06, 15.62, 8.72, 3.26, 0.76, 0.26],  #0
                               [3.20, 3.76, 2.36, 2.10, 1.10, 0.38, 0.20],  #-6
                               [0.60, 0.42, 0.38, 0.56, 0.36, 0.14, 0.26],  #-12
                               [0.20, 0.22, 0.20, 0.26, 0.18, 0.14, 0.16]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_64_capret_r5'] = [[87.08, 82.96, 69.68, 43.32, 13.52, 2.42, 0.80],  #18
                               [85.88, 80.22, 67.52, 42.08, 13.28, 2.54, 1.00],  #12
                               [78.64, 74.30, 59.26, 37.04, 11.86, 2.50, 0.80],  #6
                               [47.54, 44.44, 33.96, 20.28, 7.42, 1.64, 0.84],  #0
                               [10.74, 10.62, 7.04, 5.40, 2.88, 1.82, 0.54],  #-6
                               [2.34, 2.38, 1.84, 1.82, 1.06, 0.70, 0.88],  #-12
                               [0.96, 1.08, 1.12, 0.88, 0.68, 0.70, 0.18]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_64_capret_r10'] = [[93.88, 90.78, 81.06, 57.38, 21.02, 4.22, 1.40],  #18
                               [93.36, 89.94, 80.48, 55.04, 20.70, 4.32, 1.66],  #12
                               [88.26, 84.96, 73.02, 50.38, 17.88, 17.88, 1.28],  #6
                               [62.30, 58.74, 47.14, 30.18, 11.74, 3.20, 1.48],  #0
                               [17.18, 16.60, 12.12, 9.04, 5.02, 2.90, 1.10],  #-6
                               [4.42, 4.08, 3.38, 3.16, 2.00, 1.22, 1.56],  #-12
                               [1.86, 1.86, 1.82, 1.72, 1.34, 1.26, 0.28]]   #-18
################################################################### 32 32 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb32_32_imgret_r1'] = [[50.11, 46.82, 38.14, 17.74, 3.31, 0.65, 0.18],  #18
                               [44.42, 43.38, 36.67, 17.21, 3.05, 0.76, 0.21],  #12
                               [31.16, 29.70, 23.99, 15.03, 2.40, 0.54, 0.38],  #6
                               [12.07, 12.63, 10.17, 5.05, 1.49, 0.51, 0.21],  #0
                               [2.86, 2.58, 1.95, 1.49, 0.64, 0.13, 0.16],  #-6
                               [0.80, 0.71, 0.46, 0.46, 0.39, 0.14, 0.20],  #-12
                               [0.31, 0.33, 0.38, 0.29, 0.27, 0.13, 0.25]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_32_imgret_r5'] = [[84.39, 81.71, 74.82, 48.58, 12.84, 2.78, 1.00],  #18
                               [80.43, 78.97, 73.35, 46.40, 12.02, 3.27, 1.17],  #12
                               [68.67, 66.12, 58.80, 42.88, 10.27, 2.90, 1.86],  #6
                               [37.28, 38.67, 32.46, 18.69, 6.12, 2.34, 0.96],  #0
                               [10.81, 10.42, 8.63, 6.43, 2.98, 0.94, 1.00],  #-6
                               [3.39, 3.11, 2.42, 2.52, 1.85, 0.94, 0.96],  #-12
                               [1.56, 1.44, 1.68, 1.38, 1.18, 0.92, 1.17]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_32_imgret_r10'] = [[92.94, 91.59, 87.35, 65.59, 21.07, 5.26, 2.40],  #18
                               [91.08, 90.50, 86.36, 63.27, 20.60, 5.51, 2.15],  #12
                               [83.90, 81.65, 76.08, 59.15, 18.41, 5.37, 3.52],  #6
                               [54.10, 55.28, 48.50, 30.34, 11.44, 4.28, 1.82],  #0
                               [18.80, 18.16, 14.54, 12.09, 5.86, 1.79, 1.92],  #-6
                               [6.22, 5.58, 4.72, 4.82, 3.70, 1.92, 1.84],  #-12
                               [2.92, 2.66, 2.80, 2.64, 2.32, 1.74, 2.17]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_32_capret_r1'] = [[59.56, 50.10, 32.66, 14.68, 2.34, 0.66, 0.22],  #18
                               [56.42, 49.42, 34.10, 13.46, 3.04, 0.78, 0.40],  #12
                               [45.14, 37.52, 26.32, 13.98, 2.16, 0.72, 0.48],  #6
                               [18.64, 18.90, 12.30, 5.52, 1.62, 0.62, 0.34],  #0
                               [3.74, 2.82, 1.94, 1.52, 0.92, 0.16, 0.24],  #-6
                               [0.54, 0.44, 0.70, 0.56, 0.42, 0.16, 0.12],  #-12
                               [0.24, 0.22, 0.28, 0.22, 0.20, 0.10, 0.34]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_32_capret_r5'] = [[85.66, 76.82, 57.22, 27.70, 5.08, 1.16, 0.66],  #18
                               [84.00, 76.26, 56.78, 27.66, 6.22, 1.76, 0.94],  #12
                               [75.72, 64.66, 48.12, 27.18, 5.58, 1.52, 0.92],  #6
                               [43.12, 41.48, 26.46, 12.68, 3.66, 1.38, 0.82],  #0
                               [11.76, 9.22, 6.14, 4.30, 2.02, 0.24, 0.68],  #-6
                               [2.34, 2.66, 2.02, 1.52, 0.82, 0.60, 0.66],  #-12
                               [1.22, 1.06, 1.20, 1.02, 1.08, 0.48, 1.14]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_32_capret_r10'] = [[92.86, 86.72, 71.60, 39.26, 8.32, 2.04, 1.46],  #18
                               [91.94, 86.34, 71.62, 39.32, 10.08, 3.02, 1.50],  #12
                               [86.52, 77.96, 62.42, 38.38, 9.60, 2.80, 1.62],  #6
                               [57.88, 55.22, 38.66, 19.94, 5.98, 2.30, 1.34],  #0
                               [18.38, 14.54, 9.94, 7.46, 3.54, 0.56, 1.26],  #-6
                               [5.02, 4.46, 3.06, 2.98, 1.54, 1.26, 1.40],  #-12
                               [2.22, 2.10, 2.42, 1.84, 1.68, 0.96, 1.86]]   #-18
################################################################### 32 16 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb32_16_imgret_r1'] = [[35.38, 32.55, 23.06, 8.65, 1.41, 0.34, 0.12],  #18
                               [31.50, 28.70, 21.53, 7.96, 1.03, 0.36, 0.18],  #12
                               [22.54, 21.28, 16.85, 5.76, 0.98, 0.35, 0.28],  #6
                               [11.19, 10.32, 7.62, 2.32, 0.98, 0.28, 0.10],  #0
                               [2.07, 2.31, 1.64, 0.96, 0.41, 0.32, 0.14],  #-6
                               [0.67, 0.55, 0.61, 0.42, 0.25, 0.20, 0.08],  #-12
                               [0.25, 0.19, 0.19, 0.28, 0.21, 0.14, 0.11]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_16_imgret_r5'] = [[74.28, 71.22, 58.67, 27.63, 5.86, 1.59, 0.79],  #18
                               [70.34, 66.46, 55.86, 26.42, 4.99, 1.60, 0.80],  #12
                               [57.78, 54.82, 46.53, 20.68, 4.46, 1.22, 0.82],  #6
                               [34.24, 32.78, 25.89, 10.18, 3.64, 1.48, 0.70],  #0
                               [8.44, 9.92, 7.54, 4.36, 2.10, 1.34, 0.81],  #-6
                               [2.89, 2.78, 2.66, 1.94, 1.16, 0.89, 0.64],  #-12
                               [1.26, 1.20, 1.00, 1.08, 0.92, 0.56, 0.60]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_16_imgret_r10'] = [[87.39, 85.31, 75.77, 42.18, 10.77, 3.02, 1.55],  #18
                               [84.95, 82.23, 72.99, 40.83, 9.06, 3.27, 1.73],  #12
                               [75.18, 72.90, 64.15, 32.84, 8.24, 2.60, 1.58],  #6
                               [50.78, 48.64, 40.22, 17.84, 6.69, 2.70, 1.52],  #0
                               [14.88, 17.35, 13.24, 8.66, 3.83, 2.42, 1.54],  #-6
                               [5.44, 5.18, 5.20, 3.58, 2.32, 1.72, 1.36],  #-12
                               [2.40, 2.38, 2.10, 2.11, 1.78, 1.13, 1.12]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_16_capret_r1'] = [[40.90, 32.22, 19.88, 7.06, 1.40, 0.46, 0.16],  #18
                               [37.94, 30.30, 18.84, 7.02, 1.04, 0.44, 0.30],  #12
                               [32.42, 25.18, 16.78, 5.32, 0.88, 0.38, 0.22],  #6
                               [16.56, 14.10, 8.86, 2.30, 0.60, 0.32, 0.24],  #0
                               [2.96, 2.54, 1.84, 1.00, 0.42, 0.28, 0.08],  #-6
                               [0.50, 0.78, 0.56, 0.40, 0.18, 0.12, 0.06],  #-12
                               [0.22, 0.22, 0.20, 0.16, 0.10, 0.12, 0.08]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_16_capret_r5'] = [[70.66, 58.04, 38.92, 14.56, 3.20, 1.50, 0.62],  #18
                               [68.66, 56.30, 37.62, 14.44, 2.14, 1.26, 0.76],  #12
                               [62.24, 49.70, 34.52, 11.84, 2.80, 0.94, 0.76],  #6
                               [39.88, 31.72, 20.28, 6.34, 2.10, 0.78, 0.76],  #0
                               [9.76, 8.22, 5.50, 3.18, 1.54, 1.20, 0.32],  #-6
                               [2.36, 2.64, 1.90, 1.36, 0.74, 0.64, 0.08],  #-12
                               [1.04, 1.08, 0.90, 0.44, 0.78, 0.16, 0.44]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb32_16_capret_r10'] = [[83.54, 72.40, 51.24, 21.36, 5.52, 2.22, 1.08],  #18
                               [81.20, 70.36, 50.68, 21.72, 3.92, 2.36, 1.14],  #12
                               [76.02, 64.18, 47.60, 17.94, 4.80, 1.62, 1.18],  #6
                               [53.60, 44.82, 29.34, 10.16, 3.88, 1.42, 1.38],  #0
                               [15.94, 13.24, 9.04, 5.12, 2.56, 1.80, 0.92],  #-6
                               [4.48, 4.44, 3.28, 2.44, 1.72, 1.20, 0.16],  #-12
                               [2.38, 2.10, 1.62, 0.84, 1.62, 0.40, 0.80]]   #-18
################################################################### 16 256 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb16_256_imgret_r1'] = [[35.44, 33.74, 33.84, 29.34, 18.06, 4.42, 0.58],  #18
                               [28.63, 28.74, 28.08, 25.26, 15.14, 3.33, 0.55],  #12
                               [17.56, 17.92, 17.49, 17.47, 10.97, 2.28, 0.44],  #6
                               [6.38, 6.18, 6.20, 6.08, 4.22, 1.17, 0.40],  #0
                               [1.39, 1.36, 1.29, 1.34, 0.86, 0.55, 0.14],  #-6
                               [0.40, 0.42, 0.36, 0.50, 0.40, 0.36, 0.22],  #-12
                               [0.24, 0.23, 0.25, 0.26, 0.23, 0.17, 0.20]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_256_imgret_r5'] = [[74.08, 72.93, 72.14, 66.93, 48.97, 15.85, 2.89],  #18
                               [66.73, 66.87, 65.47, 60.38, 44.97, 12.76, 2.53],  #12
                               [49.53, 49.43, 48.83, 47.27, 34.78, 9.00, 2.10],  #6
                               [22.44, 22.03, 21.60, 21.34, 16.44, 5.90, 1.82],  #0
                               [5.85, 5.51, 5.84, 5.31, 4.68, 2.94, 0.93],  #-6
                               [1.99, 2.08, 1.92, 2.09, 1.83, 1.63, 1.16],  #-12
                               [1.29, 1.15, 0.92, 1.20, 1.03, 0.96, 0.94]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_256_imgret_r10'] = [[87.50, 87.12, 86.17, 82.13, 66.36, 26.30, 5.44],  #18
                               [82.78, 82.76, 81.28, 77.43, 61.95, 21.67, 4.99],  #12
                               [67.42, 67.22, 66.75, 64.85, 51.42, 16.02, 4.05],  #6
                               [35.04, 34.86, 34.46, 33.51, 26.36, 10.70, 3.67],  #0
                               [10.47, 10.13, 10.69, 9.55, 8.46, 5.59, 1.98],  #-6
                               [3.86, 4.07, 3.87, 3.85, 3.44, 3.08, 2.22],  #-12
                               [2.32, 2.23, 1.69, 2.27, 1.98, 1.90, 1.78]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_256_capret_r1'] = [[45.62, 44.34, 40.80, 31.52, 17.22, 3.70, 0.72],  #18
                               [41.84, 38.78, 36.14, 28.80, 15.48, 3.14, 0.64],  #12
                               [28.68, 29.84, 25.76, 23.22, 12.70, 2.66, 0.64],  #6
                               [10.10, 9.26, 8.62, 7.18, 4.84, 1.26, 0.34],  #0
                               [1.40, 1.22, 1.14, 1.28, 0.98, 0.56, 0.14],  #-6
                               [0.34, 0.34, 0.26, 0.32, 0.22, 0.26, 0.16],  #-12
                               [0.30, 0.18, 0.18, 0.10, 0.30, 0.16, 0.14]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_256_capret_r5'] = [[78.90, 75.78, 70.20, 57.70, 35.02, 9.10, 1.30],  #18
                               [75.04, 71.72, 67.60, 54.30, 32.08, 7.58, 1.52],  #12
                               [60.96, 60.04, 55.08, 46.50, 26.34, 6.28, 1.44],  #6
                               [25.86, 25.22, 23.68, 18.36, 12.10, 3.28, 1.04],  #0
                               [5.32, 4.98, 4.30, 3.86, 2.78, 1.78, 0.58],  #-6
                               [1.78, 1.44, 1.50, 1.28, 1.10, 0.66, 0.70],  #-12
                               [1.14, 0.88, 0.94, 0.92, 1.08, 0.58, 0.70]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_256_capret_r10'] = [[88.78, 87.18, 82.96, 71.70, 47.28, 15.10, 2.52],  #18
                               [86.82, 84.44, 80.60, 69.00, 45.26, 12.70, 2.80],  #12
                               [75.84, 74.74, 69.92, 60.48, 37.70, 9.76, 2.36],  #6
                               [37.30, 36.46, 34.22, 28.24, 18.60, 5.54, 1.82],  #0
                               [8.84, 8.10, 7.30, 6.02, 4.72, 3.28, 1.12],  #-6
                               [3.12, 2.94, 2.84, 2.70, 1.94, 1.20, 1.16],  #-12
                               [2.14, 1.62, 1.50, 1.58, 1.88, 1.26, 1.10]]   #-18
################################################################### 16 128 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb16_128_imgret_r1'] = [[35.86, 34.04, 33.59, 26.30, 13.38, 2.24, 0.42],  #18
                               [29.50, 28.90, 27.87, 23.05, 10.92, 1.95, 0.41],  #12
                               [17.88, 17.66, 16.94, 15.55, 7.83, 1.36, 0.42],  #6
                               [6.31, 6.27, 6.18, 5.22, 3.28, 0.93, 0.32],  #0
                               [1.26, 1.22, 1.02, 1.26, 0.83, 0.41, 0.22],  #-6
                               [0.46, 0.34, 0.44, 0.36, 0.30, 0.30, 0.19],  #-12
                               [0.28, 0.21, 0.25, 0.23, 0.18, 0.15, 0.16]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_128_imgret_r5'] = [[74.88, 73.08, 72.18, 63.17, 39.44, 9.77, 1.96],  #18
                               [67.21, 66.74, 65.53, 58.27, 34.86, 7.42, 1.81],  #12
                               [49.38, 49.48, 48.81, 44.57, 26.13, 5.86, 1.63],  #6
                               [22.00, 21.79, 21.46, 19.03, 12.03, 4.29, 1.61],  #0
                               [5.52, 5.52, 4.93, 5.05, 3.81, 2.51, 1.11],  #-6
                               [2.40, 1.78, 2.21, 2.14, 1.62, 1.56, 0.97],  #-12
                               [1.19, 0.88, 1.14, 1.03, 0.88, 0.85, 0.76]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_128_imgret_r10'] = [[87.73, 87.34, 85.95, 79.33, 56.24, 16.86, 4.08],  #18
                               [82.78, 82.69, 81.45, 75.07, 50.83, 13.33, 3.64],  #12
                               [67.61, 67.57, 66.36, 61.96, 39.97, 11.25, 3.32],  #6
                               [35.02, 34.62, 34.07, 30.58, 20.51, 7.73, 2.97],  #0
                               [10.11, 10.04, 9.52, 9.35, 6.94, 4.64, 2.16],  #-6
                               [4.40, 3.56, 4.13, 3.98, 2.99, 2.94, 1.87],  #-12
                               [2.12, 1.62, 2.10, 1.94, 1.68, 1.70, 1.61]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_128_capret_r1'] = [[45.42, 42.32, 36.96, 25.44, 11.76, 2.58, 0.62,],  #18
                               [41.96, 39.10, 34.68, 23.22, 10.34, 1.98, 0.48],  #12
                               [28.40, 28.54, 24.62, 19.08, 8.20, 1.66, 0.34],  #6
                               [9.32, 9.08, 7.86, 6.12, 3.34, 0.92, 0.24],  #0
                               [1.12, 1.02, 1.10, 1.08, 0.68, 0.44, 0.22],  #-6
                               [0.34, 0.34, 0.32, 0.26, 0.30, 0.22, 0.26],  #-12
                               [0.16, 0.04, 0.14, 0.14, 0.20, 0.28, 0.20]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_128_capret_r5'] = [[78.02, 74.68, 65.06, 47.20, 24.00, 5.20, 1.12],  #18
                               [73.88, 71.50, 63.50, 45.26, 22.14, 4.58, 1.04],  #12
                               [60.42, 58.28, 50.50, 37.54, 17.48, 3.66, 1.10],  #6
                               [24.38, 23.78, 21.30, 15.28, 7.42, 2.64, 0.76],  #0
                               [4.52, 4.76, 3.94, 3.46, 2.12, 1.34, 0.82],  #-6
                               [1.80, 1.18, 1.60, 1.16, 1.10, 1.00, 0.78],  #-12
                               [0.88, 0.60, 0.92, 0.68, 0.54, 0.68, 0.64]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_128_capret_r10'] = [[88.92, 85.94, 78.78, 61.98, 34.04, 8.40, 2.00],  #18
                               [86.38, 83.80, 77.64, 59.80, 32.30, 7.52, 1.84],  #12
                               [75.24, 72.62, 65.26, 50.40, 26.44, 5.72, 1.70],  #6
                               [36.36, 35.36, 30.94, 23.34, 12.16, 4.36, 1.20],  #0
                               [8.48, 7.58, 7.06, 5.64, 3.66, 2.56, 1.52],  #-6
                               [3.36, 2.46, 3.26, 2.44, 1.84, 1.52, 1.48],  #-12
                               [1.78, 1.24, 1.80, 1.48, 1.00, 1.14, 1.28]]   #-18
################################################################### 16 64 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb16_64_imgret_r1'] = [[35.64, 33.38, 31.55, 22.85, 7.64, 1.15, 0.34],  #18
                               [28.68, 29.00, 25.84, 19.48, 5.71, 0.91, 0.32],  #12
                               [17.51, 16.96, 16.74, 12.40, 4.15, 0.86, 0.26],  #6
                               [6.66, 6.01, 5.46, 4.28, 2.08, 0.63, 0.13],  #0
                               [1.18, 1.20, 1.25, 0.96, 0.67, 0.34, 0.20],  #-6
                               [0.38, 0.48, 0.40, 0.38, 0.25, 0.18, 0.14],  #-12
                               [0.21, 0.25, 0.21, 0.18, 0.14, 0.18, 0.09]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_64_imgret_r5'] = [[74.66, 72.21, 69.78, 55.70, 25.58, 5.27, 1.54],  #18
                               [67.28, 66.52, 62.84, 51.63, 20.59, 4.08, 1.48],  #12
                               [49.15, 48.42, 46.21, 37.74, 15.80, 3.87, 1.20],  #6
                               [22.02, 21.48, 20.67, 15.73, 7.98, 2.65, 0.97],  #0
                               [5.29, 5.79, 5.39, 4.39, 3.04, 1.76, 1.02],  #-6
                               [1.84, 2.11, 1.93, 1.64, 1.72, 0.98, 0.53],  #-12
                               [0.90, 0.90, 0.94, 0.90, 0.82, 0.68, 0.47]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_64_imgret_r10'] = [[87.72, 86.35, 84.48, 72.98, 39.78, 9.39, 3.02],  #18
                               [83.06, 82.67, 79.20, 68.81, 33.50, 7.73, 2.86],  #12
                               [67.27, 66.47, 64.01, 54.57, 26.21, 7.22, 2.58],  #6
                               [34.90, 34.21, 32.88, 26.10, 14.27, 4.88, 1.82],  #0
                               [9.85, 10.29, 9.75, 8.27, 5.77, 3.47, 1.90,],  #-6
                               [3.40, 3.70, 3.73, 3.35, 3.24, 1.94, 1.03],  #-12
                               [1.98, 1.70, 1.86, 1.76, 1.73, 1.10, 0.95]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_64_capret_r1'] = [[45.08, 38.94, 31.44, 18.86, 6.98, 1.28, 0.38],  #18
                               [41.56, 38.90, 29.98, 17.26, 4.00, 0.92, 0.30],  #12
                               [29.10, 26.40, 21.30, 13.48, 4.44, 0.96, 0.38],  #6
                               [9.48, 8.62, 6.96, 4.78, 2.04, 0.60, 0.16],  #0
                               [1.04, 1.34, 1.30, 0.86, 0.58, 0.40, 0.14],  #-6
                               [0.36, 0.30, 0.30, 0.26, 0.22, 0.22, 0.16],  #-12
                               [0.12, 0.20, 0.28, 0.16, 0.16, 0.06, 0.04]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_64_capret_r5'] = [[77.56, 70.38, 57.32, 36.08, 13.92, 2.84, 0.78],  #18
                               [74.20, 68.28, 55.08, 34.92, 9.00, 2.08, 0.90],  #12
                               [58.00, 53.02, 45.08, 28.16, 9.70, 2.56, 0.84],  #6
                               [25.86, 22.78, 19.42, 11.72, 5.42, 1.50, 0.28],  #0
                               [4.70, 4.62, 4.50, 2.72, 1.60, 1.18, 0.94],  #-6
                               [1.68, 1.60, 1.28, 1.22, 1.22, 0.68, 0.36],  #-12
                               [0.54, 0.68, 0.94, 0.82, 0.74, 0.08, 0.30]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_64_capret_r10'] = [[88.26, 83.94, 72.08, 48.98, 20.50, 4.82, 1.86],  #18
                               [85.78, 80.72, 69.80, 48.54, 14.36, 3.66, 1.72],  #12
                               [73.24, 68.78, 59.32, 40.10, 15.44, 4.06, 1.60],  #6
                               [37.92, 33.38, 28.44, 17.92, 9.06, 2.70, 0.64],  #0
                               [8.04, 7.94, 7.28, 4.64, 2.78, 2.24, 1.62],  #-6
                               [3.06, 2.78, 2.60, 2.48, 2.32, 1.24, 0.74],  #-12
                               [1.38, 1.40, 2.04, 1.30, 1.12, 0.28, 0.62]]   #-18
################################################################### 16 32 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb16_32_imgret_r1'] = [[35.10, 32.28, 28.09, 15.39, 3.18, 0.54, 0.26],  #18
                               [28.87, 28.09, 24.00, 13.13, 2.43, 0.45, 0.22],  #12
                               [17.54, 17.41, 15.13, 8.55, 1.66, 0.58, 0.14],  #6
                               [6.08, 6.03, 4.28, 2.65, 0.75, 0.31, 0.15],  #0
                               [1.36, 1.05, 1.17, 0.80, 0.33, 0.16, 0.20],  #-6
                               [0.42, 0.43, 0.39, 0.33, 0.30, 0.18, 0.11],  #-12
                               [0.23, 0.24, 0.21, 0.21, 0.21, 0.18, 0.14]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_32_imgret_r5'] = [[73.76, 71.42, 64.68, 43.60, 11.75, 2.44, 1.27],  #18
                               [66.60, 65.40, 59.15, 39.72, 11.38, 2.32, 1.13],  #12
                               [48.93, 47.86, 43.18, 28.18, 7.61, 2.19, 1.03],  #6
                               [21.44, 21.41, 15.86, 10.58, 3.80, 1.60, 0.77],  #0
                               [5.50, 4.52, 4.93, 3.63, 1.90, 1.06, 0.96],  #-6
                               [2.04, 2.08, 1.85, 1.36, 1.11, 1.03, 0.51],  #-12
                               [0.97, 1.00, 1.00, 0.82, 0.77, 0.74, 0.66]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_32_imgret_r10'] = [[87.14, 85.88, 80.06, 60.33, 20.27, 4.77, 2.14],  #18
                               [82.63, 81.19, 76.20, 56.68, 19.44, 4.36, 2.40],  #12
                               [66.78, 66.04, 60.78, 43.18, 13.50, 4.15, 2.20],  #6
                               [34.07, 34.48, 26.21, 17.96, 6.66, 3.16, 1.38],  #0
                               [9.90, 8.56, 9.17, 6.66, 3.48, 1.96, 1.86],  #-6
                               [3.78, 3.94, 3.56, 2.78, 2.24, 2.08, 1.02],  #-12
                               [1.96, 1.99, 2.02, 1.72, 1.58, 1.48, 1.12]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_32_capret_r1'] = [[42.20, 36.26, 25.92, 12.30, 2.74, 0.48, 0.20],  #18
                               [39.00, 34.98, 23.82, 11.58, 2.56, 0.52, 0.36],  #12
                               [27.96, 24.62, 18.32, 8.90, 2.24, 0.44, 0.26],  #6
                               [9.72, 8.30, 4.84, 2.80, 0.74, 0.34, 0.16],  #0
                               [1.42, 1.16, 0.98, 0.56, 0.40, 0.28, 0.10],  #-6
                               [0.24, 0.40, 0.24, 0.14, 0.24, 0.20, 0.12],  #-12
                               [0.22, 0.20, 0.12, 0.20, 0.08, 0.22, 0.04]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_32_capret_r5'] = [[74.42, 64.42, 47.02, 25.30, 6.10, 1.44, 0.68],  #18
                               [72.10, 62.26, 46.44, 23.74, 5.90, 0.88, 0.78],  #12
                               [57.02, 51.32, 36.42, 19.08, 4.96, 1.38, 0.66],  #6
                               [23.82, 22.00, 13.52, 7.10, 1.74, 0.94, 0.48],  #0
                               [4.68, 4.14, 3.92, 2.28, 0.80, 0.92, 0.32],  #-6
                               [1.66, 1.78, 1.26, 0.82, 0.84, 0.74, 0.40],  #-12
                               [0.94, 0.62, 0.60, 0.86, 0.76, 0.78, 0.36]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_32_capret_r10'] = [[85.64, 78.44, 61.18, 36.02, 10.18, 2.48, 1.36],  #18
                               [83.94, 76.12, 60.26, 33.64, 9.36, 1.66, 1.20],  #12
                               [71.88, 66.06, 49.78, 28.12, 7.94, 2.48, 0.88],  #6
                               [34.74, 32.66, 20.60, 11.30, 3.02, 1.58, 0.70],  #0
                               [8.38, 6.86, 6.24, 3.98, 1.32, 1.40, 0.62],  #-6
                               [2.90, 3.30, 2.28, 1.62, 1.40, 1.26, 0.74],  #-12
                               [1.92, 1.38, 1.22, 1.56, 1.40, 1.34, 0.70]]   #-18
################################################################### 16 16 #######################################################################################
###############################  18    12    6      0     -6    -12   -18
acc['symb16_16_imgret_r1'] = [[33.30, 30.84, 21.80, 7.16, 1.21, 0.23, 0.28],  #18
                               [27.22, 24.75, 18.87, 5.50, 1.12, 0.42, 0.19],  #12
                               [16.30, 14.78, 12.21, 4.08, 0.86, 0.38, 0.13],  #6
                               [4.99, 5.12, 3.42, 1.98, 1.14, 0.42, 0.23],  #0
                               [1.11, 1.29, 0.98, 0.37, 0.49, 0.16, 0.06],  #-6
                               [0.46, 0.40, 0.39, 0.46, 0.22, 0.12, 0.41],  #-12
                               [0.25, 0.24, 0.21, 0.16, 0.12, 0.20, 0.28]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_16_imgret_r5'] = [[72.31, 69.54, 55.96, 25.46, 5.01, 1.14, 1.03],  #18
                               [65.28, 61.82, 50.92, 20.76, 4.88, 1.69, 0.75],  #12
                               [47.56, 43.30, 36.75, 16.14, 4.66, 1.57, 0.77],  #6
                               [18.59, 18.10, 13.33, 7.70, 4.90, 1.81, 0.92],  #0
                               [5.30, 5.63, 4.31, 2.22, 2.44, 0.96, 0.38],  #-6
                               [2.00, 1.68, 1.88, 1.90, 1.09, 0.54, 1.46],  #-12
                               [1.11, 1.12, 0.98, 0.77, 0.66, 0.94, 1.45]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_16_imgret_r10'] = [[86.36, 83.66, 72.85, 38.67, 9.69, 2.28, 1.92],  #18
                               [81.04, 78.46, 68.37, 33.05, 8.83, 3.15, 1.69],  #12
                               [65.39, 61.37, 53.60, 27.44, 8.36, 3.23, 1.44],  #6
                               [30.84, 29.18, 22.28, 12.98, 8.77, 3.52, 1.95],  #0
                               [9.97, 10.13, 7.75, 4.17, 4.60, 2.00, 0.88],  #-6
                               [3.70, 3.33, 3.51, 3.66, 2.15, 1.24, 2.69],  #-12
                               [1.97, 2.05, 1.98, 1.68, 1.24, 1.81, 3.02]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_16_capret_r1'] = [[40.86, 30.28, 17.46, 5.70, 1.00, 0.26, 0.24],  #18
                               [36.44, 27.64, 17.16, 4.84, 1.46, 0.40, 0.18],  #12
                               [26.00, 19.52, 12.58, 4.50, 1.00, 0.36, 0.28],  #6
                               [6.64, 7.64, 4.30, 2.18, 0.88, 0.36, 0.20],  #0
                               [1.26, 1.56, 0.60, 0.44, 0.64, 0.24, 0.12],  #-6
                               [0.40, 0.24, 0.30, 0.48, 0.22, 0.06, 0.24],  #-12
                               [0.16, 0.12, 0.18, 0.18, 0.08, 0.22, 0.24]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_16_capret_r5'] = [[70.10, 56.50, 34.88, 13.50, 2.76, 0.64, 0.58],  #18
                               [66.14, 52.42, 34.14, 10.74, 3.22, 1.18, 0.48],  #12
                               [54.14, 41.66, 27.60, 9.98, 3.16, 0.96, 0.80],  #6
                               [19.54, 19.02, 10.68, 4.86, 1.92, 0.90, 0.88],  #0
                               [4.68, 5.74, 2.30, 1.44, 1.34, 0.76, 0.12],  #-6
                               [1.52, 1.38, 1.50, 1.76, 0.62, 0.10, 0.52],  #-12
                               [0.76, 0.84, 0.64, 0.56, 0.50, 0.78, 0.44]]   #-18
###############################  18    12    6      0     -6    -12   -18
acc['symb16_16_capret_r10'] = [[82.28, 70.66, 48.34, 20.98, 4.58, 1.28, 1.08],  #18
                               [79.74, 67.46, 47.24, 17.20, 5.18, 2.14, 0.90],  #12
                               [69.60, 55.96, 40.08, 16.44, 4.68, 1.88, 1.18],  #6
                               [29.70, 28.70, 17.28, 7.86, 3.10, 1.52, 1.42],  #0
                               [8.62, 9.50, 4.20, 2.80, 2.66, 1.22, 0.20],  #-6
                               [2.82, 2.86, 2.52, 2.92, 1.22, 0.26, 1.02],  #-12
                               [1.26, 1.86, 1.14, 1.02, 0.96, 1.34, 0.86]]   #-18
opt_acc = {}
opt_acc['amb_imgret_r1'] =[0.28, 0.41, 0.49, 1.98, 12.21, 24.75, 43.38, 52.52, 59.3,  62.18, 63.44]
opt_acc['amb_imgret_r5'] =[1.45, 1.46, 2.44, 7.7, 36.75, 61.82, 78.97, 84.72, 87.78, 89.14, 89.87]
opt_acc['amb_imgret_r10'] =[3.02, 3.02, 4.6, 12.98, 53.6, 78.46, 90.5, 93.15, 94.77, 95.32, 95.72]
opt_acc['amb_capret_r1'] =[0.24, 0.34, 0.64, 2.18, 12.58, 27.64, 49.42, 61.00, 69.12, 73.28, 75.24]
opt_acc['amb_capret_r5'] =[0.44, 1.14, 1.34, 4.86, 27.6, 52.42, 76.26, 85.66, 90.24, 92.4, 93.9 ]
opt_acc['amb_capret_r10'] =[0.86, 1.86, 2.66, 7.86, 40.08, 67.46, 86.34, 92.86, 95.56, 96.8, 97.12]
opt_acc['sca_imgret_r1'] =[0.28, 0.41, 0.49, 1.98, 12.21, 24.75, 43.38, 52.52, 59.30, 62.18, 63.44]
opt_acc['sca_imgret_r5'] =[1.45, 1.46, 2.44, 7.70, 36.75, 61.82, 78.97, 84.72, 87.78, 89.14, 89.87]
opt_acc['sca_imgret_r10'] =[3.02, 3.02, 4.60, 12.98, 53.60, 78.43, 90.50, 93.15, 94.77, 95.32, 95.72]
opt_acc['sca_capret_r1'] =[0.24, 0.34, 0.64, 2.18, 12.58, 27.64, 49.42, 61.00, 69.12, 73.28, 75.24]
opt_acc['sca_capret_r5'] =[0.44, 1.14, 1.34, 4.86, 27.60, 52.42, 76.26, 85.66, 90.24, 92.40, 93.90]
opt_acc['sca_capret_r10'] =[0.86, 1.86, 2.66, 7.86, 40.08, 67.46, 86.34, 92.86, 95.56, 96.40, 97.12]


# opt for img ret r@1
opt_ri_sca = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
opt_rc_sca = [5, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]








def get_acc():
    '''
    :return: a 4D matrix of accuracy value: [snr_img, snr_cap, numsym_img, numsym_cap]
    '''
    # init variables
    snr_cap = np.arange(18, -19, -6)  # cap snr
    snr_img = np.arange(18, -19, -6)  # img snr
    numsym_img = np.arange(4, 9, 1)  # img num symbol, 256 = 2**8
    numsym_cap = np.arange(4, 9, 1)  # cap num symbol, 256 = 2**8

    # init acc
    Z_acc = {}
    for ic in ['img', 'cap']:
        for r in [1, 5, 10]:
            Z_acc[f'{ic}ret_r{r}'] = np.zeros((len(snr_img), len(snr_cap), len(numsym_img), len(numsym_cap)))

    for ic in ['img', 'cap']:
        for r in [1, 5, 10]:
            for i_ni, ni in enumerate(numsym_img):
                for i_nc, nc in enumerate(numsym_cap):
                    Z_acc[f'{ic}ret_r{r}'][:, :, i_ni, i_nc] = acc[f'symb{2 ** ni}_{2 ** nc}_{ic}ret_r{r}']

    return Z_acc

def get_res_from_sn(s, n, channel_snr):
    """
    :param s: snr of img, in dB
    :param n: num of symbol of img, in dB
    :param channel_snr: environment snr in dB
    :return: total res, img res, cap res in dB
    """
    res = (s - channel_snr) / 6 + n
    return res

def get_snr_from_res_numsym(channel_snr, res, numsym):
    """
    :param channel_snr: environment snr in dB
    :param res: in dB
    :param numsym: in dB
    :return: snr in dB
    """
    assert res >= numsym, 'res must >= num of symbol'
    return (res - numsym) * 6.0 + channel_snr

def transf_acc4D_snr2res(acc, channel_snr, snr_img, snr_cap, numsym_img, numsym_cap):
    '''
    Transform accuracy matrix: [snr_img, snr_cap, numsym_img, numsym_cap] into [res_img, res_cap, numsym_img, numsym_cap]
    :return: accuracy matrix:[res_img, res_cap, numsym_img, numsym_cap]
    '''
    acc4D_numsym_res = {}
    res_img = [get_res_from_sn(si, ni, channel_snr) for si in snr_img for ni in numsym_img]
    res_img = list(dict.fromkeys(res_img))
    res_img.sort()
    res_img = np.array(res_img)
    res_cap = [get_res_from_sn(sc, nc, channel_snr) for sc in snr_cap for nc in numsym_cap]
    res_cap = list(dict.fromkeys(res_cap))
    res_cap.sort()
    res_cap = np.array(res_cap)
    for ic in ['img', 'cap']:
        for r in [1, 5, 10]:
            acc4D_numsym_res[f'{ic}ret_r{r}'] = np.zeros((len(res_img), len(res_cap), len(numsym_img), len(numsym_cap)))
    for i_ni, ni in enumerate(numsym_img):
        for i_ri, ri in enumerate(res_img):
            for i_nc, nc in enumerate(numsym_cap):
                for i_rc, rc in enumerate(res_cap):
                    if ri < ni or rc < nc:
                        for ic in ['img', 'cap']:
                            for r in [1, 5, 10]:
                                acc4D_numsym_res[f'{ic}ret_r{r}'][i_ri, i_rc, i_ni, i_nc] = np.nan
                        continue
                    si = get_snr_from_res_numsym(channel_snr, ri, ni)
                    if si not in snr_img:
                        for ic in ['img', 'cap']:
                            for r in [1, 5, 10]:
                                acc4D_numsym_res[f'{ic}ret_r{r}'][i_ri, i_rc, i_ni, i_nc] = np.nan
                        continue
                    sc = get_snr_from_res_numsym(channel_snr, rc, nc)
                    if sc not in snr_cap:
                        for ic in ['img', 'cap']:
                            for r in [1, 5, 10]:
                                acc4D_numsym_res[f'{ic}ret_r{r}'][i_ri, i_rc, i_ni, i_nc] = np.nan
                        continue
                    for ic in ['img', 'cap']:
                        for r in [1, 5, 10]:
                            i_si = np.where(snr_img==si)[0]
                            i_sc = np.where(snr_cap==sc)[0]
                            acc4D_numsym_res[f'{ic}ret_r{r}'][i_ri, i_rc, i_ni, i_nc] = acc[f'{ic}ret_r{r}'][i_si, i_sc, i_ni, i_nc]

    return acc4D_numsym_res



####################################################################################################################################################################################

####################################################################################################################################################################################
if __name__ == '__main__':
    from utils.utils import groups_from_res_imgandcap, groups_from_res_imgorcap, get_opt_acc_from_imgres_capres, res_calculator

    colors = ['blue', 'orange', 'green', 'red', 'purple', 'brown', 'pink', 'gray', 'olive', 'cyan']  # 10 colors
    ############################################################### noise one side
    SNR=[18, 12, 6, 0, -6, -12, -18]
    fig, ax = plt.subplots(nrows=2, ncols=3)
    fig.set_size_inches(16, 9)
    for j, ic in enumerate(['img', 'cap']):
        for i, r in enumerate([1, 5, 10]):
            noise_both = []
            for temp_i in range(7):
                noise_both.append(np.array(acc[f'symb256_256_{ic}ret_r{r}'])[temp_i, temp_i])


            ax[j, i].plot(SNR, acc[f'symb256_256_{ic}ret_r{r}_both'], 'r', linewidth=3.0, label='Scenario a')
            ax[j, i].plot(SNR, acc[f'symb256_256_{ic}ret_r{r}_ncap'], 'b--*', linewidth=3.0, markersize=12, label='Scenario b')
            ax[j, i].plot(SNR, acc[f'symb256_256_{ic}ret_r{r}_nimg'], 'b--o', linewidth=3.0, markersize=10, label='Scenario c')
            ax[j, i].plot(SNR, np.array(noise_both), 'b', linewidth=3.0, label='Scenario d')
            ax[j, i].set_xlabel('SNR/dB', fontsize=15)
            ax[j, i].set_ylabel('Accuracy/%', fontsize=15)
            ax[j, i].set_ylim(0, 100)
            ax[j, i].grid()
    ax[0, 0].annotate('R@1', xy=(0.5, 1.1), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 1].annotate('R@5', xy=(0.5, 1.1), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 2].annotate('R@10', xy=(0.5, 1.1), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 0].annotate('retrieval', xy=(-0.35, 0.5), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 0].annotate('Image', xy=(-0.35, 0.6), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[1, 0].annotate('retrieval', xy=(-0.35, 0.5), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[1, 0].annotate('Caption', xy=(-0.35, 0.6), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    # plt.subplots_adjust(wspace=0, hspace=0)
    lines_labels = [ax[0, 0].get_legend_handles_labels()]
    lines, labels = [sum(lol, []) for lol in zip(*lines_labels)]
    fig.legend(lines, labels, loc='upper left', fontsize='xx-large')
    plt.show()

    SNR_range = [18, 12, 6, 0, -6, -12, -18]
    max_num_symbol=256
    min_num_symbol=16
    max_SNR = 18
    min_SNR = -18
    snr_img = np.arange(18, -19, -6)  # img snr
    snr_cap = np.arange(18, -19, -6)  # cap snr
    numsym_img = np.arange(4, 9, 1)  # number of symbol img
    numsym_cap = np.arange(4, 9, 1)  # number of symbol cap

    channel_SNR = -24

    # # ################################## fix ri, ni, projection   ############ x_res_range_db, y_res_in_total
    # S1_proj_with_black_line_text_coco
    acc_sn = get_acc()
    acc_nr = transf_acc4D_snr2res(acc_sn, channel_SNR, snr_img, snr_cap, numsym_img, numsym_cap)
    colors = ['blue', 'blue', 'orange', 'green', 'red', 'purple', 'brown', 'pink', 'gray', 'olive', 'cyan']
    res_range_db = np.arange(5, 16, 1)
    fig, ax = plt.subplots(nrows=2, ncols=3,subplot_kw={"projection": "3d"})
    fig.set_size_inches(16, 9)
    for j, ic in enumerate(['img', 'cap']):
        for i, r in enumerate([1, 5, 10]):
            acc_nr_2D = acc_nr[f'{ic}ret_r{r}'][8, :, 2, :]
            for i_res_db, res_db in enumerate(res_range_db):
                z_acc = acc_nr_2D[i_res_db, :]
                mask_z = ~np.isnan(z_acc)
                z_acc = z_acc[mask_z]
                x_num_symbol = numsym_cap[mask_z]
                y_res = np.array([res_db] * x_num_symbol.shape[0])
                ax[j, i].plot3D(x_num_symbol, y_res, z_acc, color=colors[i_res_db], label=f'res = 2^{res_db}')
                ######## add projection
                z_null = np.array([0] * x_num_symbol.shape[0])
                ax[j, i].plot3D(x_num_symbol, y_res, z_null, color=colors[i_res_db], linestyle='dashed')
                y = np.array([res_db] * x_num_symbol.shape[0])
                y = np.concatenate((y, y), axis=0)
                X, Y = np.meshgrid(x_num_symbol, y)
                Z = np.repeat(np.concatenate((np.expand_dims(z_acc, axis=0), np.expand_dims(z_null, axis=0)), axis=0), x_num_symbol.shape[0], axis=0)
                ax[j, i].plot_surface(X, Y, Z, color=colors[i_res_db], alpha=0.1)

            ######## add lines with number
            for i_x, x in enumerate(numsym_cap):
                z_line = acc_nr_2D[:, i_x]
                mask_z = ~np.isnan(z_line)
                z_line = z_line[mask_z]
                y_line = res_range_db[mask_z]
                x_line = np.array([x] * y_line.shape[0])
                ax[j, i].plot3D(x_line, y_line, z_line, color='k')
                for i_text, text in enumerate(z_line):
                    x_pos = x_line[i_text]
                    y_pos = y_line[i_text]
                    ax[j, i].text(x_pos, y_pos, text, '%.2f' % text, fontdict={'fontsize': 7})

            ax[j, i].set_xlabel('$\mathbf{d^{cap}_i}$', fontsize=20, labelpad=8)
            ax[j, i].set_ylabel('$\mathbf{B^{cap}_i}$', fontsize=20, labelpad=8)
            ax[j, i].set_xticks(range(4, 9, 1))
            ax[j, i].set_xticklabels([f'{i}' for i in range(4, 9, 1)])
            y_res_range_db = np.array(res_range_db)
            ax[j, i].set_yticks(y_res_range_db[1::3])
            ax[j, i].set_yticklabels([f'2^{res_db}' for res_db in y_res_range_db[0::3]])
            ax[j, i].set_zlabel('Accuracy/%', fontsize=15)
            ax[j, i].set_zlim(0, 100)
            ax[j, i].view_init(20, 320, None)
    # fig.suptitle('acc when fix img res and numsym')
    ax[0, 0].annotate('R@1', xy=(0.5, 0.9), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 1].annotate('R@5', xy=(0.5, 0.9), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 2].annotate('R@10', xy=(0.5, 0.9), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 0].annotate('retrieval', xy=(-0.1, 0.5), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 0].annotate('Image', xy=(-0.1, 0.6), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[1, 0].annotate('retrieval', xy=(-0.1, 0.5), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[1, 0].annotate('Caption', xy=(-0.1, 0.6), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    plt.subplots_adjust(wspace=0, hspace=0)
    plt.show()


                # # ################################## S1_fixRes_3D.png   ############ x_num_symbol, y_res, z_acc
    # # ################################## S1_fixRes_maxAcc.png   ############ x_res_range_db, y_res_in_total
    colors = [(1, 0, 0), (0, 1, 0), (0, 0, 1), (1, 0, 1), (1, 1, 0), (0, 1, 1),
              (0.2, 0.4, 0.7), (0.2, 0.7, 0.4), (0.7, 0.2, 0.4), (0.7, 0.4, 0.2), (0.4, 0.7, 0.2), (0.4, 0.2, 0.7),
              (0.1, 0.1, 0.8), (0.8, 0.1, 0.1), (0.1, 0.8, 0.1)]
    res_range_db = np.arange(4, 16, 1)
    # res_range_db = np.arange(7, 8, 1)
    max_acc={}
    for j, ic in enumerate(['img', 'cap']):
         for i, r in enumerate([1, 5, 10]):
            max_acc[f'{ic}ret_r{r}']=[]
    fig, ax = plt.subplots(nrows=2, ncols=3, subplot_kw={"projection": "3d"})
    for j, ic in enumerate(['img', 'cap']):
         for i, r in enumerate([1, 5, 10]):
            for i_res_db, res_db in enumerate(res_range_db):
                groups = np.array(groups_from_res_imgorcap(2**res_db, -24))
                if groups.shape[0] > 0:
                    groups = groups[groups[:, 0] <= max_num_symbol]
                    groups = groups[groups[:, 0] >= min_num_symbol]
                    groups = groups[groups[:, 1] <= max_SNR]
                    groups = groups[groups[:, 1] >= min_SNR]
                    i_groups = []
                    for i_group, group in enumerate(groups):
                        num_symbol, snr = group[0], group[1]
                        # aa=math.log2(res_calculator(num_symbol, snr, channel_SNR))
                        # print(aa)
                        if abs(math.log2(res_calculator(num_symbol, snr, channel_SNR)) - res_db) > 0.1:
                            i_groups.append(i_group)
                            # groups = np.delete(groups, (i_group), axis=0)
                    groups = np.delete(groups, (i_groups), axis=0)
                    # groups = groups[abs(math.log2(res_calculator(groups[:, 0], groups[:, 1], channel_SNR))-res_db) < 0.1 ]
                    if groups.shape[0] >= 1:
                        groups = list(groups)
                        z_acc = [acc[f'symb{num_symbol}_{num_symbol}_{ic}ret_r{r}'][SNR_range.index(snr)][SNR_range.index(snr)] for num_symbol, snr in groups]
                        x_num_symbol = np.array([num_symbol * 2 for num_symbol, snr in groups])
                        y_res = np.array([res_db] * x_num_symbol.shape[0])
                        ax[j, i].plot3D(x_num_symbol, y_res, z_acc, color=colors[i_res_db], label=f'res = 2^{res_db}')
                        ######## add projection
                        z_null = np.array([0] * x_num_symbol.shape[0])
                        ax[j, i].plot3D(x_num_symbol, y_res, z_null, color=colors[i_res_db], linestyle='dashed')
                        y = np.array([res_db] * x_num_symbol.shape[0])
                        y = np.concatenate((y, y), axis=0)
                        X, Y = np.meshgrid(x_num_symbol, y)
                        Z = np.repeat(np.concatenate((np.expand_dims(z_acc, axis=0), np.expand_dims(z_null, axis=0)), axis=0), x_num_symbol.shape[0], axis=0)
                        ax[j, i].plot_surface(X, Y, Z, color=colors[i_res_db], alpha=0.1)

                        ax[j, i].set_xlabel('num of symbol img or cap')
                        ax[j, i].set_ylabel('res one side')
                        ax[j, i].set_yticks(np.array(res_range_db))
                        ax[j, i].set_yticklabels([f'2^{res_db}' for res_db in res_range_db])
                        ax[j, i].set_zlabel('acc')
                        ax[j, i].legend()

                        max_acc[f'{ic}ret_r{r}'].append(max(z_acc))
                    else:
                        max_acc[f'{ic}ret_r{r}'].append(None)
                else:
                    max_acc[f'{ic}ret_r{r}'].append(None)
    plt.show()

    fig, ax = plt.subplots()
    for ic in ['img', 'cap']:
         for r in [1, 5, 10]:
            ax.plot(np.array(res_range_db), max_acc[f'{ic}ret_r{r}'], label=f'{ic}ret_r{r}')
    ax.set_xlabel('res one side')
    ax.set_ylabel('opt acc')
    ax.set_xticks(np.array(res_range_db))
    ax.set_xticklabels([f'2^{res_db}' for res_db in res_range_db])
    ax.legend(loc='upper left',fontsize='small')
    plt.show()



    ############################################## S3_resimg_rescap_optacc.png
    # S3_resimg_rescap_optacc_coco
    res_oneside_range_db = np.arange(4, 15, 1)
    X, Y = np.meshgrid(res_oneside_range_db, res_oneside_range_db) # X:cap, Y: img
    Z = {}
    for j, ic in enumerate(['img', 'cap']):
         for i, r in enumerate([1, 5, 10]):
             Z[f'{ic}ret_r{r}'] = np.zeros(X.shape) # Z.shape() = (img, cap)
    fig, ax = plt.subplots(nrows=2, ncols=3, subplot_kw={"projection": "3d"})
    fig.set_size_inches(16, 9)
    for j, ic in enumerate(['img', 'cap']):
         for i, r in enumerate([1, 5, 10]):
            for i_img_res, img_res in enumerate(res_oneside_range_db):
                for i_cap_res, cap_res in enumerate(res_oneside_range_db):
                    Z[f'{ic}ret_r{r}'][i_img_res, i_cap_res] = get_opt_acc_from_imgres_capres(acc, img_res, cap_res, f'{ic}ret_r{r}', SNR_range, max_num_symbol, min_num_symbol, max_SNR, min_SNR)
            surf = ax[j, i].plot_surface(X, Y, Z[f'{ic}ret_r{r}'], cmap='YlOrRd', linewidth=0, antialiased=False)
            ax[j, i].set_xlabel('$\mathbf{B^{img}_i}$', fontsize=20, labelpad=8)
            ax[j, i].set_ylabel('$\mathbf{B^{cap}_i}$', fontsize=20, labelpad=8)
            ax[j, i].set_zlabel('Optimal accuracy', fontsize=15)
            temp_res_oneside_range_db = np.array(res_oneside_range_db)
            ax[j, i].set_xticks(temp_res_oneside_range_db[1::3])
            ax[j, i].set_yticks(temp_res_oneside_range_db[1::3])
            ax[j, i].set_xticklabels([f'2^{res_db}' for res_db in temp_res_oneside_range_db[1::3]])
            ax[j, i].set_yticklabels([f'2^{res_db}' for res_db in temp_res_oneside_range_db[1::3]])
            ax[j, i].set_zlim(0, 100)
            ax[j, i].view_init(20, 300, None)
            ax[j, i].grid()
    # fig.suptitle('opt acc at different img and cap res')
    ax[0, 0].annotate('R@1', xy=(0.5, 0.9), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 1].annotate('R@5', xy=(0.5, 0.9), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 2].annotate('R@10', xy=(0.5, 0.9), xytext=(0, 5), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 0].annotate('retrieval', xy=(-0.1, 0.5), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[0, 0].annotate('Image', xy=(-0.1, 0.6), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[1, 0].annotate('retrieval', xy=(-0.1, 0.5), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    ax[1, 0].annotate('Caption', xy=(-0.1, 0.6), xytext=(5, 0), xycoords='axes fraction', textcoords='offset points', size='xx-large', ha='center', va='baseline')
    plt.subplots_adjust(wspace=0, hspace=0)
    plt.show()
    #############################################
    total_res_range = np.arange(5, 17, 1)
    opt_acc_totalres = {}
    for ic in ['img', 'cap']:
         for r in [1, 5, 10]:
            opt_acc_totalres[f'{ic}ret_r{r}'] = np.zeros(total_res_range.shape)
    for ic in ['img', 'cap']:
         for r in [1, 5, 10]:
            for i_total_res, total_res in enumerate(total_res_range):
                temp_max_acc = 0
                for img_res in np.arange(4, total_res, 1):
                    cap_res_db_upperbound = int(np.log2(2**total_res-2**img_res))
                    if cap_res_db_upperbound < 4: continue
                    cap_res_range = np.arange(4, cap_res_db_upperbound + 1, 1)
                    for cap_res in cap_res_range:
                        temp_max_acc = max(temp_max_acc, Z[f'{ic}ret_r{r}'][np.where(res_oneside_range_db == cap_res)[0], np.where(res_oneside_range_db == img_res)[0]])
                        # print('%d, %d' % (img_res, cap_res))
                opt_acc_totalres[f'{ic}ret_r{r}'][i_total_res] = temp_max_acc

    fig = plt.figure()
    ax = fig.add_subplot()
    for ic in ['img', 'cap']:
         for r in [1, 5, 10]:
            ax.plot(total_res_range, opt_acc_totalres[f'{ic}ret_r{r}'], label=f'{ic}ret_r{r}')
            print(opt_acc_totalres[f'{ic}ret_r{r}'])
    ax.set_xlabel('total res')
    ax.set_ylabel('opt acc')
    ax.legend(loc='upper left',fontsize='small')
    xticks_labels=[f'2^{res_db}' for res_db in total_res_range]
    xticks(total_res_range, xticks_labels)
    plt.show()


    ############################################## S2 resimg = rescap but num symbols can be uneuqal for img and cap
    res_oneside_range_db = np.arange(5, 17, 1)
    opt_acc = np.zeros(res_oneside_range_db.shape)
    fig = plt.figure()
    ax = fig.add_subplot()
    for j, ic in enumerate(['img', 'cap']):
         for i, r in enumerate([1, 5, 10]):
            for i_res, res in enumerate(res_oneside_range_db):
                opt_acc[i_res] = get_opt_acc_from_imgres_capres(acc, res, res, f'{ic}ret_r{r}', SNR_range)
            ax.plot(res_oneside_range_db, opt_acc, label=f'{ic}ret_r{r}')
    ax.set_xlabel('total res')
    ax.set_ylabel('opt acc')
    ax.legend(loc='upper left',fontsize='small')
    ax.set_xticks(np.array(res_oneside_range_db))
    ax.set_xticklabels([f'2^{res_db}' for res_db in res_oneside_range_db])
    plt.show()



    d1 = 16
    d2 = 256
    fig, ax = plt.subplots(nrows=2, ncols=3)
    for j, ic in enumerate(['img', 'cap']):
         for i, r in enumerate([1, 5, 10]):
             ax[j, i].plot(SNR_range, acc[f'symb{d1}_{d2}_{ic}ret_r{r}'], linestyle='solid', color='red', label='img {d1} cap {d2}')
    ax[0, 0].set_xlabel('img and cap SNR')
    ax[0, 0].set_ylabel('acc/%')
    ax[0, 0].set_title('image retrieval R@1')
    ax[0, 0].legend(loc='upper left', fontsize='small')
    ax[0, 0].grid()

    fig.suptitle('acc when img and cap transmitted in different size')
    plt.show()

    total_res_range = np.arange(6, 17, 1)
    fig = plt.figure()
    ax = fig.add_subplot()
    i = 0
    for ic in ['img', 'cap']:
        for r in [1, 5, 10]:
            ax.plot(total_res_range, opt_acc[f'amb_{ic}ret_r{r}'], linestyle='solid', color=colors[i], label=f'exh_{ic}ret_r{r}')
            ax.plot(total_res_range, opt_acc[f'sca_{ic}ret_r{r}'], linestyle=':', marker='*', color=colors[i], label=f'sca_{ic}ret_r{r}')
            i += 1
    ax.set_xlabel('total res')
    ax.set_ylabel('opt acc')
    ax.legend(loc='upper left', fontsize='small')
    xticks_labels = [f'2^{res_db}' for res_db in total_res_range]
    xticks(total_res_range, xticks_labels)
    plt.show()

    ############################################## left_resimg_rescap_optacc, right_totalres_optacc, at img ret R@1
    # optacc_imgret_r1_left_right_coco
    colors = ['blue', 'orange', 'green', 'red', 'purple', 'brown', 'pink', 'gray', 'olive', 'cyan']
    res_oneside_range_db = np.arange(4, 16, 1)
    total_res_range = np.arange(5, 16, 1)
    X, Y = np.meshgrid(res_oneside_range_db, res_oneside_range_db)  # X:cap, Y: img
    Z = {}
    Z = np.zeros(X.shape)  # Z.shape() = (img, cap)
    for i_img_res, img_res in enumerate(res_oneside_range_db):
        for i_cap_res, cap_res in enumerate(res_oneside_range_db):
            # if img_res == 5 and cap_res == 5:
            #     a=1
            Z[i_img_res, i_cap_res] = get_opt_acc_from_imgres_capres(acc, img_res, cap_res, f'imgret_r1', SNR_range, max_num_symbol, min_num_symbol, max_SNR, min_SNR)
    # fig, ax = plt.subplots(nrows=1, ncols=2, subplot_kw={"projection": "3d"})
    fig=plt.figure()
    fig.set_size_inches(16, 9)
    ax1=fig.add_subplot(1, 2, 1,  projection="3d")
    ax2=fig.add_subplot(1, 2, 2)

    ax1.plot_surface(X, Y, Z, cmap='YlOrRd', linewidth=0, antialiased=False, alpha=0.8)
    ax1.plot(opt_ri_sca, opt_rc_sca, opt_acc['sca_imgret_r1'], linestyle='solid',  marker='*', markersize=15, color=colors[0], linewidth=3.0)
    ax1.set_xlabel('$\mathbf{B^{img}_i}$', fontsize=20)
    ax1.set_ylabel('$\mathbf{B^{cap}_i}$', fontsize=20)
    # ax1.set_zlabel('Optimal accuracy', fontsize=15)
    temp_res_oneside_range_db = np.array(res_oneside_range_db)
    ax1.set_xticks(temp_res_oneside_range_db[1::3])
    ax1.set_yticks(temp_res_oneside_range_db[1::3])
    ax1.set_xticklabels([f'2^{res_db}' for res_db in temp_res_oneside_range_db[1::3]])
    ax1.set_yticklabels([f'2^{res_db}' for res_db in temp_res_oneside_range_db[1::3]])
    ax1.set_zlim(0, 100)
    ax1.view_init(40, 320, None)
    ax1.grid()
    i=0
    ax2.plot(total_res_range, opt_acc[f'amb_imgret_r1'], linestyle='solid', color=colors[i], linewidth=3.0, label=f'exh, r@{r}')
    ax2.plot(total_res_range, opt_acc[f'sca_imgret_r1'], marker='*', markersize=15, color=colors[i], linewidth=0, label=f'sca, r@{r}')
    i += 1
    for ic in ['img', 'cap']:
        for r in [1, 5, 10]:
            if ic != 'img' or r != 1:
                ax2.plot(total_res_range, opt_acc[f'amb_{ic}ret_r{r}'], linestyle='solid', color=colors[i], linewidth=3.0, label=f'exh, r@{r}', alpha=0.4)
                ax2.plot(total_res_range, opt_acc[f'sca_{ic}ret_r{r}'], marker='*', markersize=15, color=colors[i], linewidth=0, label=f'sca, r@{r}', alpha=0.4)
                i += 1
    ax2.set_xlabel(r'$\bar{\mathbf{B}}$', fontsize=20)
    ax2.set_ylabel('Optimal accuracy', fontsize=15)
    ax2.legend(loc='upper left', fontsize='large')
    ax2.set_xticks(temp_res_oneside_range_db[1::3])
    ax2.set_xticklabels([f'2^{res_db}' for res_db in temp_res_oneside_range_db[1::3]])
    ax1.set_position([0.05, 0, 0.45, 1])
    ax2.set_position([0.55, 0.28, 0.4, 0.4])
    ax2.set_ylim(0, 100)
    plt.show()

